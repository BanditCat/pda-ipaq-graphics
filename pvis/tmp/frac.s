@ Generated by gcc 3.2.2 for StrongARM/WinCE/PE
	.file	"/src/pvis/frac.c"
	.global	pics
	.data
	.align	0
pics:
	.word	0
	.global	bail
	.align	0
bail:
	.word	128
	.global	state
	.bss
	.align	0
state:
	.space	4
	.global	cpic
	.data
	.even
cpic:
	.short	0
	.global	mpic
	.even
mpic:
	.short	0
	.even
_ZZ6PVTickdE2xb:
	.short	59
	.even
_ZZ6PVTickdE2yb:
	.short	79
	.even
_ZZ6PVTickdE3row:
	.short	479
	.align	0
_ZZ6PVTickdE2xc:
	.word	0
	.word	-1074266112
	.align	0
_ZZ6PVTickdE2yc:
	.word	0
	.word	-1073217536
	.align	0
_ZZ6PVTickdE2xs:
	.word	0
	.word	1074266112
	.align	0
_ZZ6PVTickdE2ys:
	.word	0
	.word	1074790400
	.bss
	.align	0
_ZZ6PVTickdE2zl:
	.space	8
	.text
	.align	0
	.global	_Z6PVTickd
_Z6PVTickd:
	@ args = 0, pretend = 0, frame = 60
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #88
	sub	r2, fp, #32
	stmda	r2, {r0-r1}
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	cmp	r3, #0
	beq	L2
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	and	r3, r3, #32
	cmp	r3, #0
	beq	L2
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	and	r3, r3, #2
	cmp	r3, #0
	beq	L2
	mov	r3, #512
	str	r3, [fp, #-64]
	b	L1
L2:
	ldr	r3, L31+80
	ldr	r3, [r3, #0]
	cmp	r3, #3
	ldrls	pc, [pc, r3, asl #2]
	b	L4
	.p2align 2
L29:
	.word	L5
	.word	L13
	.word	L25
	.word	L22
L5:
	mov	r3, #0
	strh	r3, [fp, #-38]	@ movhi 
L6:
	ldrh	r2, [fp, #-38]
	ldr	r3, L31+24
	cmp	r2, r3
	bls	L9
	b	L7
L9:
	ldr	r4, L31+28
	ldrsh	r3, [r4, #0]
	mov	r0, r3
	bl	__floatsidf
	sub	ip, fp, #64
	stmdb	ip, {r0-r1}
	ldrsh	r3, [r4, #0]
	cmp	r3, #0
	bge	L10
	sub	r2, fp, #64
	ldmdb	r2, {r0-r1}
	adr	r2, L31
	ldmia	r2, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	sub	ip, fp, #64
	stmdb	ip, {r3-r4}
L10:
	ldr	r3, L31+56
	sub	r2, fp, #64
	ldmdb	r2, {r0-r1}
	ldmia	r3, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L31+8
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	ldr	r2, L31+48
	mov	r1, r4
	mov	r0, r3
	ldmia	r2, {r2-r3}
	bl	__adddf3
	sub	r3, fp, #80
	stmia	r3, {r0-r1}
	ldrsh	r3, [fp, #-38]
	mov	r0, r3
	bl	__floatsidf
	sub	ip, fp, #80
	stmdb	ip, {r0-r1}
	ldrsh	r3, [fp, #-38]
	cmp	r3, #0
	bge	L11
	sub	r2, fp, #80
	ldmdb	r2, {r0-r1}
	adr	r2, L31
	ldmia	r2, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	sub	ip, fp, #80
	stmdb	ip, {r3-r4}
L11:
	ldr	r3, L31+60
	sub	r2, fp, #80
	ldmdb	r2, {r0-r1}
	ldmia	r3, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L31+16
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	ldr	r2, L31+52
	mov	r1, r4
	mov	r0, r3
	ldmia	r2, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	mov	r2, r4
	str	r2, [sp, #0]
	sub	r2, fp, #44
	mov	r0, r2
	sub	ip, fp, #80
	ldmia	ip, {r1-r2}
	bl	_Z4fracdd
	ldr	r3, L31+28
	ldrh	r3, [r3, #0]
	ldrh	r2, [fp, #-38]
	mov	r0, r3
	mov	r1, r2
	ldr	r2, [fp, #-44]
	mov	r3, #32
	bl	_Z10PVPutPixeltt7PVColorm
	ldrh	r3, [fp, #-38]	@ movhi
	add	r3, r3, #1
	strh	r3, [fp, #-38]	@ movhi 
	b	L6
L7:
	sub	r3, fp, #48
	mov	r0, r3
	mov	r1, #255
	mov	r2, #255
	mov	r3, #255
	bl	_Z5PVrgbhhh
	ldr	r3, L31+28
	ldrh	r3, [r3, #0]
	mov	r3, r3, lsr #1
	rsb	r3, r3, #239
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L31+28
	ldrh	r3, [r3, #0]
	mov	r3, r3, lsr #1
	rsb	r3, r3, #239
	mov	r3, r3, asl #16
	mov	ip, r3, lsr #16
	ldr	r3, [fp, #-48]
	str	r3, [sp, #0]
	mov	r3, #0
	str	r3, [sp, #4]
	mov	r0, r2
	mov	r1, #149
	mov	r2, ip
	mov	r3, #169
	bl	_Z6PVRecttttt7PVColorm
	ldr	r2, L31+28
	ldr	r3, L31+28
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #1
	strh	r3, [r2, #0]	@ movhi 
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L31+32
	cmp	r2, r3
	bne	L4
	ldr	r2, L31+28
	ldr	r3, L31+36
	strh	r3, [r2, #0]	@ movhi 
	mov	r3, #0
	str	r3, [sp, #0]
	mov	r3, #0
	str	r3, [sp, #4]
	mov	r3, #239
	str	r3, [sp, #8]
	ldr	r3, L31+40
	str	r3, [sp, #12]
	ldr	r3, L31+76
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r0, #4
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L31+72
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	add	r2, r3, r0
	mov	r3, #16
	add	r3, sp, r3
	ldmia	r2, {r0-r1}
	stmia	r3, {r0-r1}
	mov	r3, #0
	str	r3, [sp, #24]
	mov	r0, #0
	mov	r1, #0
	ldr	r2, L31+36
	ldr	r3, L31+44
	bl	_Z9PVPutRecttttttttt8PVPixmapm
	ldr	r2, L31+80
	mov	r3, #3
	str	r3, [r2, #0]
	b	L4
L32:
	.align	0
L31:
	.word	0
	.word	1089470464
	.word	0
	.word	1081995264
	.word	0
	.word	1082390528
	.word	638
	.word	_ZZ6PVTickdE3row
	.word	65535
	.word	479
	.word	319
	.word	639
	.word	_ZZ6PVTickdE2xc
	.word	_ZZ6PVTickdE2yc
	.word	_ZZ6PVTickdE2xs
	.word	_ZZ6PVTickdE2ys
	.word	_ZZ6PVTickdE2xb
	.word	_ZZ6PVTickdE2yb
	.word	pics
	.word	mpic
	.word	state
	.word	PVInput
	.word	cpic
	.word	_ZZ6PVTickdE2zl
	.word	0
	.word	1080950784
	.word	0
	.word	1081344000
	.word	0
	.word	1073741824
L13:
	sub	r3, fp, #52
	mov	r0, r3
	mov	r1, #255
	mov	r2, #255
	mov	r3, #255
	bl	_Z5PVrgbhhh
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #59
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #79
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #60
	mov	r3, r3, asl #16
	mov	ip, r3, lsr #16
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #80
	mov	r3, r3, asl #16
	mov	lr, r3, lsr #16
	ldr	r3, [fp, #-52]
	str	r3, [sp, #0]
	mov	r3, #256
	str	r3, [sp, #4]
	mov	r0, r2
	mov	r2, ip
	mov	r3, lr
	bl	_Z6PVRecttttt7PVColorm
	ldr	r2, L31+64
	ldr	r3, L31+84
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [r2, #0]	@ movhi 
	ldr	r2, L31+68
	ldr	r3, L31+84
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [r2, #0]	@ movhi 
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]
	cmp	r3, #179
	bls	L14
	ldr	r3, L31+64
	mov	r2, #179
	strh	r2, [r3, #0]	@ movhi 
L14:
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]
	cmp	r3, #58
	bhi	L15
	ldr	r3, L31+64
	mov	r2, #59
	strh	r2, [r3, #0]	@ movhi 
L15:
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]
	cmp	r3, #239
	bls	L16
	ldr	r3, L31+68
	mov	r2, #239
	strh	r2, [r3, #0]	@ movhi 
L16:
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]
	cmp	r3, #78
	bhi	L17
	ldr	r3, L31+68
	mov	r2, #79
	strh	r2, [r3, #0]	@ movhi 
L17:
	sub	r3, fp, #56
	mov	r0, r3
	mov	r1, #255
	mov	r2, #255
	mov	r3, #255
	bl	_Z5PVrgbhhh
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #59
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #79
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #60
	mov	r3, r3, asl #16
	mov	ip, r3, lsr #16
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #80
	mov	r3, r3, asl #16
	mov	lr, r3, lsr #16
	ldr	r3, [fp, #-56]
	str	r3, [sp, #0]
	mov	r3, #256
	str	r3, [sp, #4]
	mov	r0, r2
	mov	r2, ip
	mov	r3, lr
	bl	_Z6PVRecttttt7PVColorm
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	cmp	r3, #0
	beq	L4
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	and	r3, r3, #65536
	cmp	r3, #0
	beq	L19
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	and	r3, r3, #1
	and	r3, r3, #255
	cmp	r3, #0
	beq	L19
	ldr	r3, L31+76
	ldrh	r3, [r3, #0]
	cmp	r3, #9
	bhi	L19
	ldr	r5, L31+48
	ldr	r6, L31+48
	ldr	r7, L31+56
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]
	sub	r3, r3, #59
	mov	r0, r3
	bl	__floatsidf
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	ldmia	r7, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L31+96
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	ldmia	r6, {r0-r1}
	mov	r2, r3
	mov	r3, r4
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
	ldr	r5, L31+52
	ldr	r6, L31+52
	ldr	r7, L31+60
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]
	sub	r3, r3, #79
	mov	r0, r3
	bl	__floatsidf
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	ldmia	r7, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L31+104
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	ldmia	r6, {r0-r1}
	mov	r2, r3
	mov	r3, r4
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
	ldr	r5, L31+56
	ldr	r3, L31+56
	ldmia	r3, {r0-r1}
	adr	r2, L31+112
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
	ldr	r5, L31+60
	ldr	r3, L31+60
	ldmia	r3, {r0-r1}
	adr	r2, L31+112
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
	ldr	r3, L31+76
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L31+72
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, L31+64
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #59
	mov	r3, r3, asl #1
	strh	r3, [r2, #0]	@ movhi 
	ldr	r3, L31+76
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L31+72
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, L31+68
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #79
	mov	r3, r3, asl #1
	strh	r3, [r2, #2]	@ movhi 
	ldr	r2, L31+76
	ldr	r3, L31+76
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #1
	strh	r3, [r2, #0]	@ movhi 
	ldr	r0, L31+72
	ldr	r3, L31+76
	ldrh	r1, [r3, #0]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	add	r3, r3, #4
	mov	r0, r3
	bl	_Z14PVSelectPixmapP8PVPixmap
	ldr	r2, L31+80
	mov	r3, #0
	str	r3, [r2, #0]
	mov	r1, #256
	str	r1, [fp, #-64]
	b	L1
L19:
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	and	r3, r3, #1048576
	cmp	r3, #0
	beq	L4
	ldr	r3, L31+84
	ldr	r3, [r3, #12]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L4
	ldr	r2, L31+88
	mov	r3, #0
	strh	r3, [r2, #0]	@ movhi 
	ldr	r2, L31+92
	adr	r3, L33+44
	ldmia	r3, {r3-r4}
	stmia	r2, {r3-r4}
	ldr	r2, L33
	mov	r3, #2
	str	r3, [r2, #0]
	mov	r2, #256
	str	r2, [fp, #-64]
	b	L1
L22:
	ldr	r3, L33+4
	ldrb	r3, [r3, #0]
	and	r3, r3, #1
	and	r3, r3, #255
	cmp	r3, #0
	beq	L23
	sub	r3, fp, #60
	mov	r0, r3
	mov	r1, #255
	mov	r2, #255
	mov	r3, #255
	bl	_Z5PVrgbhhh
	ldr	r3, L33+8
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #59
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L33+12
	ldrh	r3, [r3, #0]	@ movhi
	sub	r3, r3, #79
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	ldr	r3, L33+8
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #60
	mov	r3, r3, asl #16
	mov	ip, r3, lsr #16
	ldr	r3, L33+12
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #80
	mov	r3, r3, asl #16
	mov	lr, r3, lsr #16
	ldr	r3, [fp, #-60]
	str	r3, [sp, #0]
	mov	r3, #256
	str	r3, [sp, #4]
	mov	r0, r2
	mov	r2, ip
	mov	r3, lr
	bl	_Z6PVRecttttt7PVColorm
	bl	_Z12PVDontUpdatev
	ldr	r2, L33
	mov	r3, #1
	str	r3, [r2, #0]
	mov	r3, #256
	str	r3, [fp, #-64]
	b	L1
L23:
	ldr	r3, L33+4
	ldr	r3, [r3, #12]
	and	r3, r3, #1048576
	cmp	r3, #0
	beq	L4
	ldr	r3, L33+4
	ldr	r3, [r3, #12]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L4
	ldr	r2, L33+32
	mov	r3, #0
	strh	r3, [r2, #0]	@ movhi 
	ldr	r2, L33+40
	adr	r3, L33+44
	ldmia	r3, {r3-r4}
	stmia	r2, {r3-r4}
	ldr	r2, L33
	mov	r3, #2
	str	r3, [r2, #0]
	mov	ip, #256
	str	ip, [fp, #-64]
	b	L1
L25:
	ldr	r3, L33+32
	ldr	r2, L33+16
	ldrh	r1, [r3, #0]
	ldrh	r3, [r2, #0]
	cmp	r1, r3
	bcc	L26
	mov	r3, #0
	str	r3, [sp, #0]
	mov	r3, #0
	str	r3, [sp, #4]
	mov	r3, #239
	str	r3, [sp, #8]
	ldr	r3, L33+28
	str	r3, [sp, #12]
	ldr	r3, L33+16
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r0, #4
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L33+36
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	add	r2, r3, r0
	mov	r3, #16
	add	r3, sp, r3
	ldmia	r2, {r0-r1}
	stmia	r3, {r0-r1}
	mov	r3, #0
	str	r3, [sp, #24]
	mov	r0, #0
	mov	r1, #0
	ldr	r2, L33+20
	ldr	r3, L33+24
	bl	_Z9PVPutRecttttttttt8PVPixmapm
	ldr	r2, L33
	mov	r3, #3
	str	r3, [r2, #0]
	mov	r1, #256
	str	r1, [fp, #-64]
	b	L1
L26:
	ldr	r3, L33+40
	ldmia	r3, {r0-r1}
	adr	r2, L33+60
	ldmia	r2, {r2-r3}
	bl	__gedf2
	mov	r3, r0
	cmp	r3, #0
	bge	L28
	b	L27
L34:
	.align	0
L33:
	.word	state
	.word	PVInput
	.word	_ZZ6PVTickdE2xb
	.word	_ZZ6PVTickdE2yb
	.word	mpic
	.word	479
	.word	639
	.word	319
	.word	cpic
	.word	pics
	.word	_ZZ6PVTickdE2zl
	.word	0
	.word	0
	.word	0
	.word	1081995264
	.word	0
	.word	1079574528
	.word	0
	.word	1082390528
	.word	0
	.word	1072693248
L28:
	ldr	r2, L33+40
	adr	r3, L33+44
	ldmia	r3, {r3-r4}
	stmia	r2, {r3-r4}
	ldr	r2, L33+32
	ldr	r3, L33+32
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r3, #1
	strh	r3, [r2, #0]	@ movhi 
L27:
	ldr	r3, L33+32
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L33+36
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	ldrh	r3, [r3, #0]
	mov	r0, r3
	bl	__floatsidf
	mov	r4, r1
	mov	r3, r0
	ldr	r2, L33+40
	mov	r1, r4
	mov	r0, r3
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L33+60
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	mov	r3, r3, asl #16
	mov	r5, r3, lsr #16
	ldr	r3, L33+32
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L33+36
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	ldrh	r3, [r3, #2]
	mov	r0, r3
	bl	__floatsidf
	mov	r4, r1
	mov	r3, r0
	ldr	r2, L33+40
	mov	r1, r4
	mov	r0, r3
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L33+60
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	mov	r3, r3, asl #16
	mov	r6, r3, lsr #16
	ldr	r3, L33+32
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L33+36
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	ldrh	r3, [r3, #0]
	rsb	r3, r3, #240
	mov	r0, r3
	bl	__floatsidf
	mov	r4, r1
	mov	r3, r0
	ldr	r2, L33+40
	mov	r1, r4
	mov	r0, r3
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L33+60
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	adr	r0, L33+52
	ldmia	r0, {r0-r1}
	mov	r2, r3
	mov	r3, r4
	bl	__subdf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	mov	r3, r3, asl #16
	mov	r7, r3, lsr #16
	ldr	r3, L33+32
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L33+36
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	ldrh	r3, [r3, #2]
	rsb	r3, r3, #320
	mov	r0, r3
	bl	__floatsidf
	mov	r4, r1
	mov	r3, r0
	ldr	r2, L33+40
	mov	r1, r4
	mov	r0, r3
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L33+60
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	adr	r0, L33+68
	ldmia	r0, {r0-r1}
	mov	r2, r3
	mov	r3, r4
	bl	__subdf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	mov	r3, r3, asl #16
	mov	ip, r3, lsr #16
	mov	r3, #0
	str	r3, [sp, #0]
	mov	r3, #0
	str	r3, [sp, #4]
	mov	r3, #239
	str	r3, [sp, #8]
	ldr	r3, L33+28
	str	r3, [sp, #12]
	ldr	r3, L33+32
	ldrh	r3, [r3, #0]	@ movhi
	mov	r3, r3, asl #16
	mov	r1, r3, lsr #16
	mov	r0, #4
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L33+36
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	add	r2, r3, r0
	mov	r3, #16
	add	r3, sp, r3
	ldmia	r2, {r0-r1}
	stmia	r3, {r0-r1}
	mov	r3, #16
	str	r3, [sp, #24]
	mov	r0, r5
	mov	r1, r6
	mov	r2, r7
	mov	r3, ip
	bl	_Z9PVPutRecttttttttt8PVPixmapm
	ldr	r5, L33+40
	ldr	r3, L33+40
	ldmia	r3, {r0-r1}
	adr	r2, L33+76
	ldmia	r2, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
L4:
	mov	r1, #256
	str	r1, [fp, #-64]
L1:
	ldr	r0, [fp, #-64]
	ldmea	fp, {r4, r5, r6, r7, fp, sp, pc}
	.section .rdata
	.align	0
LC0:
	.ascii	"Unable to allocate memory\000"
	.text
	.align	0
	.global	_Z6PVInitv
_Z6PVInitv:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	ldr	r4, L41
	ldr	r0, L41+4
	bl	malloc
	mov	r3, r0
	str	r3, [r4, #0]
	ldr	r3, L41
	ldr	r3, [r3, #0]
	cmp	r3, #0
	bne	L36
	ldr	r0, L41+8
	bl	_Z17PVSetErrorMessagePc
	mov	r3, #768
	str	r3, [fp, #-24]
	b	L35
L36:
	mov	r3, #0
	str	r3, [fp, #-20]
L37:
	ldr	r3, [fp, #-20]
	cmp	r3, #9
	ble	L40
	b	L38
L40:
	ldr	r1, [fp, #-20]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L41
	ldr	r3, [r3, #0]
	add	r0, r2, r3
	ldr	r1, [fp, #-20]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L41
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	mov	r3, #0
	strh	r3, [r2, #2]	@ movhi 
	mov	r3, #0
	strh	r3, [r0, #0]	@ movhi 
	ldr	r1, [fp, #-20]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L41
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	mov	r3, #640
	strh	r3, [r2, #4]	@ movhi 
	ldr	r1, [fp, #-20]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L41
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	mov	r3, #480
	strh	r3, [r2, #6]	@ movhi 
	ldr	r1, [fp, #-20]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, L41
	ldr	r3, [r3, #0]
	add	r0, r2, r3
	ldr	ip, L41
	ldr	r1, [fp, #-20]
	mov	r2, r1
	mov	r2, r2, asl #2
	add	r2, r2, r1
	mov	r3, r2, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #10
	add	r3, r3, r1
	mov	r3, r3, asl #1
	add	r3, r3, r1
	mov	r2, r3, asl #2
	ldr	r3, [ip, #0]
	add	r3, r2, r3
	add	r3, r3, #12
	str	r3, [r0, #8]
	ldr	r3, [fp, #-20]
	add	r3, r3, #1
	str	r3, [fp, #-20]
	b	L37
L38:
	ldr	r3, L41
	ldr	r3, [r3, #0]
	add	r3, r3, #4
	mov	r0, r3
	bl	_Z14PVSelectPixmapP8PVPixmap
	ldr	r2, L41+12
	mov	r3, #0
	str	r3, [r2, #0]
	mov	r3, #256
	str	r3, [fp, #-24]
L35:
	ldr	r0, [fp, #-24]
	ldmea	fp, {r4, fp, sp, pc}
L42:
	.align	0
L41:
	.word	pics
	.word	6144120
	.word	LC0
	.word	state
	.align	0
	.global	_Z7PVClosev
_Z7PVClosev:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r3, L45
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L43
	ldr	r3, L45
	ldr	r0, [r3, #0]
	bl	free
L43:
	ldmea	fp, {fp, sp, pc}
L46:
	.align	0
L45:
	.word	pics
	.align	0
	.global	_Z4fracdd
_Z4fracdd:
	@ args = 8, pretend = 4, frame = 56
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	sub	sp, sp, #4
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
	sub	fp, ip, #8
	sub	sp, sp, #56
	str	r0, [fp, #-68]
	sub	r0, fp, #32
	stmda	r0, {r1-r2}
	str	r3, [fp, #4]
	mov	r3, #0
	strh	r3, [fp, #-38]	@ movhi 
	mvn	r3, #19
	sub	r1, fp, #28
	add	r2, r1, r3
	ldmib	fp, {r3-r4}
	stmia	r2, {r3-r4}
	mvn	r3, #27
	sub	ip, fp, #28
	add	r2, ip, r3
	sub	r0, fp, #32
	ldmda	r0, {r3-r4}
	stmia	r2, {r3-r4}
L48:
	mvn	r3, #19
	sub	r1, fp, #28
	add	r3, r1, r3
	ldmia	r3, {r0-r1}
	sub	r2, fp, #80
	stmib	r2, {r0-r1}
	sub	r3, fp, #80
	ldmib	r3, {r0-r1}
	adr	r2, L62
	ldmia	r2, {r2-r3}
	bl	__gedf2
	mov	r3, r0
	cmp	r3, #0
	bge	L52
	sub	ip, fp, #80
	ldmib	ip, {r0-r1}
	bl	__negdf2
	mov	r4, r1
	mov	r3, r0
	sub	r0, fp, #80
	stmib	r0, {r3-r4}
L52:
	sub	r2, fp, #80
	ldmib	r2, {r0-r1}
	adr	r2, L62+8
	ldmia	r2, {r2-r3}
	bl	__ltdf2
	mov	r3, r0
	cmp	r3, #0
	blt	L53
	b	L49
L53:
	mvn	r3, #27
	sub	ip, fp, #28
	add	r3, ip, r3
	ldmia	r3, {r0-r1}
	sub	r2, fp, #80
	stmda	r2, {r0-r1}
	sub	r3, fp, #80
	ldmda	r3, {r0-r1}
	adr	r2, L62
	ldmia	r2, {r2-r3}
	bl	__gedf2
	mov	r3, r0
	cmp	r3, #0
	bge	L54
	sub	ip, fp, #80
	ldmda	ip, {r0-r1}
	bl	__negdf2
	mov	r4, r1
	mov	r3, r0
	sub	r0, fp, #80
	stmda	r0, {r3-r4}
L54:
	sub	r2, fp, #80
	ldmda	r2, {r0-r1}
	adr	r2, L62+8
	ldmia	r2, {r2-r3}
	bl	__ltdf2
	mov	r3, r0
	cmp	r3, #0
	blt	L55
	b	L49
L55:
	ldrh	r3, [fp, #-38]
	ldr	r2, L62+16
	ldr	r2, [r2, #0]
	cmp	r3, r2
	bcc	L50
	b	L49
L50:
	mvn	r3, #35
	sub	ip, fp, #28
	add	r5, ip, r3
	mvn	r3, #19
	sub	r0, fp, #28
	add	r2, r0, r3
	mvn	r3, #19
	sub	r1, fp, #28
	add	r3, r1, r3
	ldmia	r2, {r0-r1}
	ldmia	r3, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	ldmib	fp, {r2-r3}
	bl	__adddf3
	mov	r7, r1
	mov	r6, r0
	mvn	r3, #27
	sub	ip, fp, #28
	add	r2, ip, r3
	mvn	r3, #27
	sub	r0, fp, #28
	add	r3, r0, r3
	ldmia	r2, {r0-r1}
	ldmia	r3, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r7
	mov	r0, r6
	mov	r2, r3
	mov	r3, r4
	bl	__subdf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
	mvn	r3, #27
	sub	r1, fp, #28
	add	r5, r1, r3
	mvn	r3, #19
	sub	r2, fp, #28
	add	r3, r2, r3
	ldmia	r3, {r3-r4}
	mov	r1, r4
	mov	r0, r3
	mov	r2, r3
	mov	r3, r4
	bl	__adddf3
	mov	r2, r1
	mov	r1, r0
	mvn	r3, #27
	sub	ip, fp, #28
	add	r3, ip, r3
	mov	r0, r1
	mov	r1, r2
	ldmia	r3, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	sub	ip, fp, #32
	ldmda	ip, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	stmia	r5, {r3-r4}
	mvn	r3, #19
	sub	r0, fp, #28
	add	r2, r0, r3
	mvn	r3, #35
	sub	r1, fp, #28
	add	r3, r1, r3
	ldmia	r3, {r3-r4}
	stmia	r2, {r3-r4}
	ldrh	r3, [fp, #-38]	@ movhi
	add	r3, r3, #1
	strh	r3, [fp, #-38]	@ movhi 
	b	L48
L49:
	ldrh	r3, [fp, #-38]
	ldr	r2, L62+16
	ldr	r2, [r2, #0]
	cmp	r3, r2
	bne	L56
	ldr	r0, [fp, #-68]
	mov	r1, #0
	mov	r2, #0
	mov	r3, #0
	bl	_Z5PVrgbhhh
	b	L47
L56:
	ldrh	r1, [fp, #-38]
	ldr	r3, L62+20
	umull	r2, r3, r1, r3
	mov	r2, r3, lsr #6
	mov	r3, r2
	mov	r3, r3, asl #1
	add	r3, r3, r2
	mov	r3, r3, asl #5
	rsb	r3, r3, r1
	strh	r3, [fp, #-38]	@ movhi 
	ldrh	r3, [fp, #-38]
	cmp	r3, #63
	bls	L58
	ldrb	r3, [fp, #-38]
	sub	r3, r3, #64
	mov	r3, r3, asl #3
	and	r2, r3, #255
	ldrb	r3, [fp, #-38]
	rsb	r3, r3, #95
	mov	r3, r3, asl #3
	and	r3, r3, #255
	ldr	r0, [fp, #-68]
	mov	r1, r2
	mov	r2, #0
	bl	_Z5PVrgbhhh
	b	L47
L58:
	ldrh	r3, [fp, #-38]
	cmp	r3, #31
	bls	L60
	ldrb	r3, [fp, #-38]
	rsb	r3, r3, #63
	mov	r3, r3, asl #3
	and	r2, r3, #255
	ldrb	r3, [fp, #-38]
	sub	r3, r3, #32
	mov	r3, r3, asl #3
	and	r3, r3, #255
	ldr	r0, [fp, #-68]
	mov	r1, #0
	bl	_Z5PVrgbhhh
	b	L47
L60:
	ldrb	r3, [fp, #-38]
	rsb	r3, r3, #31
	mov	r3, r3, asl #3
	and	r2, r3, #255
	ldrb	r3, [fp, #-38]
	mov	r3, r3, asl #3
	and	r3, r3, #255
	ldr	r0, [fp, #-68]
	mov	r1, r2
	mov	r2, r3
	mov	r3, #0
	bl	_Z5PVrgbhhh
L47:
	ldr	r0, [fp, #-68]
	ldmea	fp, {r4, r5, r6, r7, fp, sp, pc}
L63:
	.align	0
L62:
	.word	0
	.word	0
	.word	0
	.word	1074790400
	.word	bail
	.word	-1431655765
