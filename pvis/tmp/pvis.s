@ Generated by gcc 3.2.2 for StrongARM/WinCE/PE
	.file	"/src/pvis/pvis.c"
	.global	PVIDirty
	.bss
	.even
PVIDirty:
	.space	2
	.global	PVCurrentPixmap
	.data
	.align	0
PVCurrentPixmap:
	.word	0
	.global	PVErrorMessage
	.section .rdata
	.align	0
LC0:
	.ascii	"Unknown error\000"
	.data
	.align	0
PVErrorMessage:
	.word	LC0
	.global	PVTSortSpace
	.bss
	.align	0
PVTSortSpace:
	.space	4
	.global	GXOpenDisplay
	.align	0
GXOpenDisplay:
	.space	4
	.global	GXCloseDisplay
	.align	0
GXCloseDisplay:
	.space	4
	.global	GXBeginDraw
	.align	0
GXBeginDraw:
	.space	4
	.global	GXEndDraw
	.align	0
GXEndDraw:
	.space	4
	.global	GXOpenInput
	.align	0
GXOpenInput:
	.space	4
	.global	GXCloseInput
	.align	0
GXCloseInput:
	.space	4
	.global	GXGetDisplayProperties
	.align	0
GXGetDisplayProperties:
	.space	4
	.global	GXGetDefaultKeys
	.align	0
GXGetDefaultKeys:
	.space	4
	.global	GXSuspend
	.align	0
GXSuspend:
	.space	4
	.global	GXResume
	.align	0
GXResume:
	.space	4
	.global	GXSetViewport
	.align	0
GXSetViewport:
	.space	4
	.global	GXIsDisplayDRAMBuffer
	.align	0
GXIsDisplayDRAMBuffer:
	.space	4
	.global	g_hInst
	.align	0
g_hInst:
	.space	4
	.global	gx_displayprop
	.align	0
gx_displayprop:
	.space	24
	.global	gx_keylist
	.align	0
gx_keylist:
	.space	96
	.align	0
s_sai:
	.space	12
	.global	g_hWnd
	.align	0
g_hWnd:
	.space	4
	.global	inited
	.data
	.even
inited:
	.short	0
	.global	PVInput
	.align	0
PVInput:
	.byte	0
	.space	1
	.short	0
	.short	0
	.short	0
	.short	0
	.space	2
	.word	0
	.global	PVDevice
	.bss
	.align	0
PVDevice:
	.space	24
	.section .rdata
	.align	0
LC1:
	.ascii	"F\000a\000t\000a\000l\000 \000e\000r\000r\000o\000r"
	.ascii	"\000\000\000"
	.align	0
LC2:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000r"
	.ascii	"\000e\000g\000i\000s\000t\000e\000r\000 \000e\000x\000"
	.ascii	"i\000t\000 \000f\000u\000n\000c\000t\000i\000o\000n"
	.ascii	"\000\000\000"
	.align	0
LC3:
	.ascii	"U\000n\000a\000b\000l\000e\000 \000t\000o\000 \000c"
	.ascii	"\000r\000e\000a\000t\000e\000 \000w\000i\000n\000d\000"
	.ascii	"o\000w\000;\000\000\000"
	.align	0
LC4:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000a"
	.ascii	"\000l\000l\000o\000c\000a\000t\000e\000 \000s\000c\000"
	.ascii	"r\000e\000e\000n\000 \000b\000u\000f\000f\000e\000r"
	.ascii	"\000\000\000"
	.align	0
LC5:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000i"
	.ascii	"\000n\000i\000t\000i\000a\000l\000i\000z\000e\000 \000"
	.ascii	"i\000n\000t\000e\000r\000n\000a\000l\000 \000l\000i"
	.ascii	"\000b\000r\000a\000r\000y\000 \000f\000a\000c\000i\000"
	.ascii	"l\000i\000t\000i\000e\000s\000\000\000"
	.align	0
LC6:
	.ascii	"Entering main message loop\n\000"
	.align	0
LC7:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000l"
	.ascii	"\000o\000c\000k\000 \000d\000i\000s\000p\000l\000a\000"
	.ascii	"y\000\000\000"
	.text
	.align	0
	.global	WinMain
WinMain:
	@ args = 0, pretend = 0, frame = 588
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #596
	str	r0, [fp, #-20]
	str	r1, [fp, #-24]
	str	r2, [fp, #-28]
	str	r3, [fp, #-32]
	bl	_Z7GXIInitv
	mov	r3, r0
	str	r3, [fp, #-64]
	ldr	r3, [fp, #-64]
	cmp	r3, #0
	beq	L2
	mov	r0, #0
	ldr	r1, [fp, #-64]
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L2:
	ldr	r0, L28+32
	bl	atexit
	mov	r3, r0
	cmp	r3, #0
	beq	L3
	mov	r0, #0
	ldr	r1, L28+36
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L3:
	ldr	r0, [fp, #-20]
	ldr	r1, [fp, #-32]
	bl	_Z12InitInstanceP11HINSTANCE__i
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, asr #16
	cmp	r3, #0
	bne	L4
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	mov	r0, #0
	ldr	r1, L28+44
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L4:
	bl	_Z11PVICullInfov
	bl	_Z12PVIGetBufferv
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, asr #16
	cmp	r3, #0
	beq	L5
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	ldr	r2, L28+48
	sub	r3, fp, #576
	str	r3, [sp, #0]
	mov	r3, #255
	str	r3, [sp, #4]
	mov	r0, #0
	mov	r1, #0
	ldr	r2, [r2, #0]
	mvn	r3, #0
	bl	MultiByteToWideChar
	mov	r0, #0
	ldr	r1, L28+52
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L5:
	ldr	r0, L28+56
	bl	atexit
	mov	r3, r0
	cmp	r3, #0
	beq	L6
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	mov	r0, #0
	ldr	r1, L28+36
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L6:
	bl	_Z7PVIInitv
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, asr #16
	cmp	r3, #0
	bne	L7
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	mov	r0, #0
	ldr	r1, L28+60
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L7:
	ldr	r0, L28+64
	bl	printf
L8:
	sub	r2, fp, #60
	mov	r3, #0
	str	r3, [sp, #0]
	mov	r0, r2
	mov	r1, #0
	mov	r2, #0
	mov	r3, #0
	bl	PeekMessageW
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, asr #16
	cmp	r3, #0
	beq	L11
	sub	r3, fp, #60
	mov	r0, r3
	mov	r1, #0
	mov	r2, #0
	mov	r3, #0
	bl	GetMessageW
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, asr #16
	cmp	r3, #0
	beq	L12
	sub	r3, fp, #60
	mov	r0, r3
	bl	TranslateMessage
	sub	r3, fp, #60
	mov	r0, r3
	bl	DispatchMessageW
	b	L8
L12:
	ldr	r3, [fp, #-52]
	str	r3, [fp, #-592]
	b	L1
L11:
	ldr	r4, L28+68
	ldr	r3, L28+72
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	str	r0, [r4, #0]
	ldr	r3, L28+68
	ldr	r3, [r3, #0]
	cmp	r3, #0
	bne	L15
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	ldr	r1, L28+76
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L15:
	ldr	r3, [fp, #-588]
	str	r3, [fp, #-584]
	bl	GetTickCount
	mov	r3, r0
	str	r3, [fp, #-588]
	ldr	r3, L28+80
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	bne	L16
	ldr	r2, L28+80
	mov	r3, #1
	strh	r3, [r2, #0]	@ movhi 
	bl	_Z6PVInitv
	mov	r3, r0
	str	r3, [fp, #-580]
	b	L17
L16:
	ldr	r2, [fp, #-588]
	ldr	r3, [fp, #-584]
	cmp	r2, r3
	bcc	L18
	ldr	r3, [fp, #-588]
	ldr	r2, [fp, #-584]
	rsb	r4, r2, r3
	mov	r0, r4
	bl	__floatsidf
	sub	r2, fp, #592
	stmdb	r2, {r0-r1}
	cmp	r4, #0
	bge	L20
	sub	r3, fp, #592
	ldmdb	r3, {r0-r1}
	adr	r2, L28
	ldmia	r2, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	sub	r2, fp, #592
	stmdb	r2, {r3-r4}
L20:
	sub	r3, fp, #592
	ldmdb	r3, {r0-r1}
	adr	r2, L28+8
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	sub	r2, fp, #592
	stmdb	r2, {r3-r4}
	b	L19
L18:
	adr	r3, L28+16
	ldmia	r3, {r3-r4}
	sub	r2, fp, #592
	stmdb	r2, {r3-r4}
L19:
	sub	r3, fp, #592
	ldmdb	r3, {r0-r1}
	bl	_Z6PVTickd
	mov	r3, r0
	str	r3, [fp, #-580]
L17:
	ldr	r2, L28+84
	ldr	r3, L28+84
	ldr	r3, [r3, #12]
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	str	r3, [r2, #12]
	ldr	r2, L28+84
	ldr	r3, L28+84
	ldrb	r3, [r3, #0]
	and	r3, r3, #1
	strb	r3, [r2, #0]
	ldr	r2, L28+84
	ldr	r1, L28+84
	mov	r3, #0
	strh	r3, [r1, #8]	@ movhi 
	mov	r3, #0
	strh	r3, [r2, #6]	@ movhi 
	bl	_Z8PVIFlushv
	ldr	r3, L28+88
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	ldr	r4, [fp, #-580]
	str	r4, [fp, #-604]
	ldr	r2, [fp, #-604]
	cmp	r2, #512
	beq	L23
	ldr	r3, [fp, #-604]
	cmp	r3, #512
	bgt	L27
	b	L8
L27:
	ldr	r4, [fp, #-604]
	cmp	r4, #768
	beq	L24
	b	L8
L23:
	ldr	r3, [fp, #-52]
	str	r3, [fp, #-592]
	b	L1
L24:
	ldr	r2, L28+48
	sub	r3, fp, #576
	str	r3, [sp, #0]
	mov	r3, #255
	str	r3, [sp, #4]
	mov	r0, #0
	mov	r1, #0
	ldr	r2, [r2, #0]
	mvn	r3, #0
	bl	MultiByteToWideChar
	ldr	r3, L28+40
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	sub	r3, fp, #576
	mov	r0, #0
	mov	r1, r3
	ldr	r2, L28+24
	ldr	r3, L28+28
	bl	MessageBoxW
	ldr	r3, [fp, #-52]
	str	r3, [fp, #-592]
L1:
	ldr	r0, [fp, #-592]
	ldmea	fp, {r4, fp, sp, pc}
L29:
	.align	0
L28:
	.word	0
	.word	1106247680
	.word	0
	.word	1083129856
	.word	0
	.word	0
	.word	LC1
	.word	327696
	.word	_Z8PVICleanv
	.word	LC2
	.word	g_hWnd
	.word	LC3
	.word	PVErrorMessage
	.word	LC4
	.word	_Z15PVIRemoveBufferv
	.word	LC5
	.word	LC6
	.word	PVDevice
	.word	GXBeginDraw
	.word	LC7
	.word	inited
	.word	PVInput
	.word	GXEndDraw
	.align	0
	.global	_Z15MyRegisterClassP11HINSTANCE__Pw
_Z15MyRegisterClassP11HINSTANCE__Pw:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #48
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	mov	r3, #3
	str	r3, [fp, #-60]
	ldr	r3, L31
	str	r3, [fp, #-56]
	mov	r3, #0
	str	r3, [fp, #-52]
	mov	r3, #0
	str	r3, [fp, #-48]
	ldr	r3, [fp, #-16]
	str	r3, [fp, #-44]
	ldr	r0, [fp, #-16]
	mov	r1, #101
	bl	LoadIconW
	str	r0, [fp, #-40]
	mov	r3, #0
	str	r3, [fp, #-36]
	mov	r0, #0
	bl	GetStockObject
	str	r0, [fp, #-32]
	mov	r3, #0
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-20]
	str	r3, [fp, #-24]
	sub	r3, fp, #60
	mov	r0, r3
	bl	RegisterClassW
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
L32:
	.align	0
L31:
	.word	_Z7WndProcP6HWND__jjl
	.section .rdata
	.align	0
LC8:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000r"
	.ascii	"\000e\000t\000r\000i\000e\000v\000e\000 \000s\000y\000"
	.ascii	"s\000t\000e\000m\000 \000m\000e\000t\000r\000i\000c"
	.ascii	"\000s\000\000\000"
	.align	0
LC9:
	.ascii	"Got system metrics: screen is %d by %d\n\000"
	.align	0
LC10:
	.ascii	"Successfully initialized GAPI\n\000"
	.text
	.align	0
	.global	_Z12InitInstanceP11HINSTANCE__i
_Z12InitInstanceP11HINSTANCE__i:
	@ args = 0, pretend = 0, frame = 544
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #576
	str	r0, [fp, #-20]
	str	r1, [fp, #-24]
	mov	r3, #0
	str	r3, [fp, #-28]
	mov	r0, #0
	bl	GetSystemMetrics
	mov	r3, r0
	str	r3, [fp, #-432]
	ldr	r3, [fp, #-432]
	cmp	r3, #0
	beq	L35
	mov	r0, #1
	bl	GetSystemMetrics
	mov	r3, r0
	str	r3, [fp, #-436]
	ldr	r3, [fp, #-436]
	cmp	r3, #0
	bne	L34
L35:
	ldr	r0, [fp, #-28]
	ldr	r1, L39
	ldr	r2, L39+4
	ldr	r3, L39+8
	bl	MessageBoxW
	mov	r3, #0
	str	r3, [fp, #-560]
	b	L33
L34:
	ldr	r0, L39+12
	ldr	r1, [fp, #-432]
	ldr	r2, [fp, #-436]
	bl	printf
	ldr	r2, L39+16
	ldr	r3, [fp, #-20]
	str	r3, [r2, #0]
	sub	r3, fp, #428
	ldr	r0, [fp, #-20]
	mov	r1, #1
	mov	r2, r3
	mov	r3, #100
	bl	LoadStringW
	sub	r3, fp, #228
	ldr	r0, [fp, #-20]
	mov	r1, #1
	mov	r2, r3
	mov	r3, #100
	bl	LoadStringW
	sub	r3, fp, #428
	sub	r2, fp, #228
	mov	r0, r3
	mov	r1, r2
	bl	FindWindowW
	mov	r3, r0
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	beq	L36
	ldr	r3, [fp, #-28]
	orr	r3, r3, #1
	mov	r0, r3
	bl	SetForegroundWindow
	mov	r3, #0
	str	r3, [fp, #-560]
	b	L33
L36:
	sub	r3, fp, #428
	ldr	r0, [fp, #-20]
	mov	r1, r3
	bl	_Z15MyRegisterClassP11HINSTANCE__Pw
	sub	r2, fp, #428
	sub	ip, fp, #228
	mov	r3, #0
	str	r3, [sp, #0]
	mov	r3, #0
	str	r3, [sp, #4]
	ldr	r3, [fp, #-432]
	str	r3, [sp, #8]
	ldr	r3, [fp, #-436]
	str	r3, [sp, #12]
	mov	r3, #0
	str	r3, [sp, #16]
	mov	r3, #0
	str	r3, [sp, #20]
	ldr	r3, [fp, #-20]
	str	r3, [sp, #24]
	mov	r3, #0
	str	r3, [sp, #28]
	ldr	r0, L39+20
	mov	r1, r2
	mov	r2, ip
	mov	r3, #272629760
	bl	CreateWindowExW
	mov	r3, r0
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	bne	L37
	mov	r3, #0
	str	r3, [fp, #-560]
	b	L33
L37:
	ldr	r0, [fp, #-28]
	ldr	r1, [fp, #-24]
	bl	ShowWindow
	ldr	r0, [fp, #-28]
	bl	UpdateWindow
	ldr	r3, L39+24
	ldr	r3, [r3, #0]
	ldr	r0, [fp, #-28]
	mov	r1, #1
	mov	lr, pc
	mov	pc, r3
	mov	r3, r0
	cmp	r3, #0
	bne	L38
	mov	r3, #0
	str	r3, [fp, #-560]
	b	L33
L38:
	ldr	r4, L39+28
	ldr	r2, L39+32
	sub	r3, fp, #460
	mov	r0, r3
	ldr	r3, [r2, #0]
	mov	lr, pc
	mov	pc, r3
	mov	lr, r4
	sub	ip, fp, #460
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1}
	stmia	lr, {r0, r1}
	ldr	r3, L39+36
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	ldr	r4, L39+40
	ldr	r2, L39+44
	sub	r3, fp, #556
	mov	r0, r3
	ldr	r3, [r2, #0]
	mov	r1, #2
	mov	lr, pc
	mov	pc, r3
	mov	r3, r4
	sub	r2, fp, #556
	mov	ip, #96
	mov	r0, r3
	mov	r1, r2
	mov	r2, ip
	bl	memcpy
	ldr	r0, L39+48
	bl	printf
	ldr	r0, [fp, #-28]
	bl	SetCapture
	ldr	r2, L39+52
	ldr	r3, [fp, #-28]
	str	r3, [r2, #0]
	mov	r3, #1
	str	r3, [fp, #-560]
L33:
	ldr	r0, [fp, #-560]
	ldmea	fp, {r4, fp, sp, pc}
L40:
	.align	0
L39:
	.word	LC8
	.word	LC1
	.word	327696
	.word	LC9
	.word	g_hInst
	.word	67108872
	.word	GXOpenDisplay
	.word	gx_displayprop
	.word	GXGetDisplayProperties
	.word	GXOpenInput
	.word	gx_keylist
	.word	GXGetDefaultKeys
	.word	LC10
	.word	g_hWnd
	.bss
	.align	0
_ZZ7WndProcP6HWND__jjlE4oldx:
	.space	4
	.align	0
_ZZ7WndProcP6HWND__jjlE4oldy:
	.space	4
	.text
	.align	0
	.global	_Z7WndProcP6HWND__jjl
_Z7WndProcP6HWND__jjl:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #24
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	str	r3, [fp, #-28]
	ldr	r2, [fp, #-20]
	str	r2, [fp, #-36]
	ldr	r3, [fp, #-36]
	cmp	r3, #256
	beq	L43
	ldr	r2, [fp, #-36]
	cmp	r2, #256
	bhi	L94
	ldr	r3, [fp, #-36]
	cmp	r3, #7
	beq	L91
	ldr	r2, [fp, #-36]
	cmp	r2, #7
	bhi	L95
	ldr	r3, [fp, #-36]
	cmp	r3, #2
	beq	L89
	b	L92
L95:
	ldr	r2, [fp, #-36]
	cmp	r2, #8
	beq	L90
	b	L92
L94:
	ldr	r3, [fp, #-36]
	cmp	r3, #512
	beq	L88
	ldr	r2, [fp, #-36]
	cmp	r2, #512
	bhi	L96
	ldr	r3, L97
	ldr	r2, [fp, #-36]
	cmp	r2, r3
	beq	L68
	b	L92
L96:
	ldr	r3, L97+4
	ldr	r2, [fp, #-36]
	cmp	r2, r3
	beq	L85
	ldr	r3, L97+8
	ldr	r2, [fp, #-36]
	cmp	r2, r3
	beq	L87
	b	L92
L43:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #0]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L44
	ldr	r3, L97+16
	ldrb	r3, [r3, #12]
	eor	r3, r3, #1
	and	r3, r3, #1
	and	r3, r3, #255
	cmp	r3, #0
	beq	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #65536
	orr	r3, r3, #1
	str	r3, [r2, #12]
	b	L42
L44:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #12]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L47
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #2
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #131072
	orr	r3, r3, #2
	str	r3, [r2, #12]
	b	L42
L47:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #24]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L50
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #4
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #262144
	orr	r3, r3, #4
	str	r3, [r2, #12]
	b	L42
L50:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #36]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L53
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #8
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #524288
	orr	r3, r3, #8
	str	r3, [r2, #12]
	b	L42
L53:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #48]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L56
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #16
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #1048576
	orr	r3, r3, #16
	str	r3, [r2, #12]
	b	L42
L56:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #60]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L59
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #32
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #2097152
	orr	r3, r3, #32
	str	r3, [r2, #12]
	b	L42
L59:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #72]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L62
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #64
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #4194304
	orr	r3, r3, #64
	str	r3, [r2, #12]
	b	L42
L62:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #84]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L42
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	and	r3, r3, #128
	cmp	r3, #0
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #8388608
	orr	r3, r3, #128
	str	r3, [r2, #12]
	b	L42
L68:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #0]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L69
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #65536
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #1
	str	r3, [r2, #12]
	b	L42
L69:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #12]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L71
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #131072
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #2
	str	r3, [r2, #12]
	b	L42
L71:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #24]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L73
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #262144
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #4
	str	r3, [r2, #12]
	b	L42
L73:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #36]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L75
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #524288
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #8
	str	r3, [r2, #12]
	b	L42
L75:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #48]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L77
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #1048576
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #16
	str	r3, [r2, #12]
	b	L42
L77:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #60]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L79
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #2097152
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #32
	str	r3, [r2, #12]
	b	L42
L79:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #72]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L81
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #4194304
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #64
	str	r3, [r2, #12]
	b	L42
L81:
	ldr	r3, L97+12
	ldrsh	r2, [r3, #84]
	ldr	r3, [fp, #-24]
	cmp	r3, r2
	bne	L42
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	orr	r3, r3, #8388608
	str	r3, [r2, #12]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldr	r3, [r3, #12]
	bic	r3, r3, #128
	str	r3, [r2, #12]
	b	L42
L85:
	ldr	r3, L97+16
	ldrb	r3, [r3, #0]
	eor	r3, r3, #1
	and	r3, r3, #1
	and	r3, r3, #255
	cmp	r3, #0
	beq	L42
	ldr	r1, L97+16
	ldr	r2, L97+20
	ldrh	r3, [fp, #-28]
	str	r3, [r2, #0]
	ldr	r3, [r2, #0]
	strh	r3, [r1, #2]	@ movhi 
	ldr	r2, L97+16
	ldr	r1, L97+24
	ldr	r3, [fp, #-28]
	mov	r3, r3, lsr #16
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	str	r3, [r1, #0]
	ldr	r3, [r1, #0]
	strh	r3, [r2, #4]	@ movhi 
	ldr	r2, L97+16
	mov	r3, #0
	strh	r3, [r2, #6]	@ movhi 
	ldr	r2, L97+16
	mov	r3, #0
	strh	r3, [r2, #8]	@ movhi 
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldrb	r3, [r3, #0]
	orr	r3, r3, #3
	strb	r3, [r2, #0]
	b	L42
L87:
	ldr	r2, L97+16
	ldrh	r3, [fp, #-28]	@ movhi
	strh	r3, [r2, #2]	@ movhi 
	ldr	r2, L97+16
	ldr	r3, [fp, #-28]
	mov	r3, r3, lsr #16
	strh	r3, [r2, #4]	@ movhi 
	ldr	r1, L97+16
	ldr	r3, L97+20
	ldrh	r2, [fp, #-28]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	rsb	r3, r3, r2
	strh	r3, [r1, #6]	@ movhi 
	ldr	r0, L97+16
	ldr	r3, [fp, #-28]
	mov	r3, r3, lsr #16
	ldr	r2, L97+24
	mov	r1, r3	@ movhi
	ldrh	r3, [r2, #0]	@ movhi
	rsb	r3, r3, r1
	strh	r3, [r0, #8]	@ movhi 
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldrb	r3, [r3, #0]
	orr	r3, r3, #2
	strb	r3, [r2, #0]
	ldr	r2, L97+16
	ldr	r3, L97+16
	ldrb	r3, [r3, #0]
	bic	r3, r3, #1
	strb	r3, [r2, #0]
	b	L42
L88:
	ldr	r2, L97+20
	ldr	r3, L97+16
	ldrh	r3, [r3, #2]
	str	r3, [r2, #0]
	ldr	r2, L97+24
	ldr	r3, L97+16
	ldrh	r3, [r3, #4]
	str	r3, [r2, #0]
	ldr	r2, L97+16
	ldrh	r3, [fp, #-28]	@ movhi
	strh	r3, [r2, #2]	@ movhi 
	ldr	r2, L97+16
	ldr	r3, [fp, #-28]
	mov	r3, r3, lsr #16
	strh	r3, [r2, #4]	@ movhi 
	ldr	r1, L97+16
	ldr	r3, L97+20
	ldrh	r2, [fp, #-28]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	rsb	r3, r3, r2
	strh	r3, [r1, #6]	@ movhi 
	ldr	r0, L97+16
	ldr	r3, [fp, #-28]
	mov	r3, r3, lsr #16
	ldr	r2, L97+24
	mov	r1, r3	@ movhi
	ldrh	r3, [r2, #0]	@ movhi
	rsb	r3, r3, r1
	strh	r3, [r0, #8]	@ movhi 
	b	L42
L89:
	ldr	r3, L97+28
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	ldr	r3, L97+32
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	mov	r0, #0
	bl	PostQuitMessage
	b	L42
L90:
	ldr	r3, L97+36
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	b	L42
L91:
	ldr	r3, L97+40
	ldr	r3, [r3, #0]
	mov	lr, pc
	mov	pc, r3
	b	L42
L92:
	ldr	r0, [fp, #-16]
	ldr	r1, [fp, #-20]
	ldr	r2, [fp, #-24]
	ldr	r3, [fp, #-28]
	bl	DefWindowProcW
	mov	r3, r0
	str	r3, [fp, #-32]
	b	L41
L42:
	mov	r3, #0
	str	r3, [fp, #-32]
L41:
	ldr	r0, [fp, #-32]
	ldmea	fp, {fp, sp, pc}
L98:
	.align	0
L97:
	.word	257
	.word	513
	.word	514
	.word	gx_keylist
	.word	PVInput
	.word	_ZZ7WndProcP6HWND__jjlE4oldx
	.word	_ZZ7WndProcP6HWND__jjlE4oldy
	.word	GXCloseInput
	.word	GXCloseDisplay
	.word	GXSuspend
	.word	GXResume
	.section .rdata
	.align	0
LC11:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000r"
	.ascii	"\000e\000l\000e\000a\000s\000e\000 \000s\000t\000y\000"
	.ascii	"l\000u\000s\000 \000i\000n\000p\000u\000t\000\000\000"
	.align	0
LC12:
	.ascii	"W\000a\000r\000n\000i\000n\000g\000\000\000"
	.text
	.align	0
	.global	_Z8PVICleanv
_Z8PVICleanv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	bl	_Z7PVClosev
	bl	_Z8PVIClosev
	bl	ReleaseCapture
	mov	r3, r0	@ movhi
	mov	r3, r3, asl #16
	mov	r3, r3, asr #16
	cmp	r3, #0
	bne	L99
	mov	r0, #0
	ldr	r1, L101
	ldr	r2, L101+4
	ldr	r3, L101+8
	bl	MessageBoxW
L99:
	ldmea	fp, {fp, sp, pc}
L102:
	.align	0
L101:
	.word	LC11
	.word	LC12
	.word	327728
	.section .rdata
	.align	0
LC13:
	.ascii	"U\000n\000s\000u\000p\000p\000o\000r\000t\000e\000d"
	.ascii	"\000 \000d\000i\000s\000p\000l\000a\000y\000 \000t\000"
	.ascii	"y\000p\000e\000\000\000"
	.align	0
LC14:
	.ascii	"\n"
	.ascii	"Device information:\n\000"
	.align	0
LC15:
	.ascii	"Delta in WORDs between horizontal pixels: %d\n\000"
	.align	0
LC16:
	.ascii	"Delta in WORDs between vertical pixels: %d\n\000"
	.align	0
LC17:
	.ascii	"Screen height: %d\n\000"
	.align	0
LC18:
	.ascii	"Screen width: %d\n\000"
	.align	0
LC19:
	.ascii	"Screen bitdepth: %d\n\000"
	.align	0
LC21:
	.ascii	"is\000"
	.align	0
LC22:
	.ascii	"is not\000"
	.align	0
LC20:
	.ascii	"Screen %s inverted\n\000"
	.align	0
LC23:
	.ascii	"Red information: %d bits, bitshift is %d\n\000"
	.align	0
LC24:
	.ascii	"Blue information: %d bits, bitshift is %d\n\000"
	.align	0
LC25:
	.ascii	"Green information: %d bits, bitshift is %d\n\000"
	.align	0
LC26:
	.ascii	"\n\000"
	.text
	.align	0
	.global	_Z11PVICullInfov
_Z11PVICullInfov:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	ldr	r2, L108
	ldr	r3, L108+4
	ldr	r3, [r3, #8]
	mov	r3, r3, asr #1
	strh	r3, [r2, #4]	@ movhi 
	ldr	r2, L108
	ldr	r3, L108+4
	ldr	r3, [r3, #12]
	mov	r3, r3, asr #1
	strh	r3, [r2, #6]	@ movhi 
	ldr	r2, L108
	ldr	r3, L108+4
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [r2, #8]	@ movhi 
	ldr	r2, L108
	ldr	r3, L108+4
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [r2, #10]	@ movhi 
	ldr	r2, L108
	ldr	r3, L108+4
	ldrb	r3, [r3, #16]
	strb	r3, [r2, #12]
	ldr	r2, L108
	ldr	r3, L108+4
	ldr	r3, [r3, #20]
	mov	r3, r3, lsr #10
	and	r3, r3, #1
	strh	r3, [r2, #14]	@ movhi 
	ldr	r3, L108+4
	ldr	r3, [r3, #20]
	and	r3, r3, #128
	cmp	r3, #0
	beq	L105
	ldr	r3, L108+4
	ldr	r3, [r3, #20]
	and	r3, r3, #1024
	cmp	r3, #0
	bne	L105
	ldr	r3, L108
	ldrh	r3, [r3, #4]
	cmp	r3, #1
	bne	L105
	ldr	r3, L108
	ldrh	r3, [r3, #6]	@ movhi
	and	r3, r3, #1
	and	r3, r3, #255
	cmp	r3, #0
	bne	L105
	ldr	r3, L108
	ldr	r2, L108
	ldrh	r1, [r3, #6]
	ldrh	r3, [r2, #10]
	cmp	r1, r3
	bne	L105
	b	L104
L105:
	ldr	r3, L108+8
	ldr	r0, [r3, #0]
	mov	r1, #0
	bl	ShowWindow
	ldr	r3, L108+8
	ldr	r0, [r3, #0]
	ldr	r1, L108+12
	ldr	r2, L108+16
	ldr	r3, L108+20
	bl	MessageBoxW
	mov	r0, #0
	bl	exit
L104:
	ldr	r2, L108
	mov	r3, #5
	strb	r3, [r2, #17]
	ldr	r2, L108
	mov	r3, #6
	strb	r3, [r2, #21]
	ldr	r2, L108
	mov	r3, #5
	strb	r3, [r2, #19]
	ldr	r2, L108
	mov	r3, #11
	strb	r3, [r2, #16]
	ldr	r2, L108
	mov	r3, #5
	strb	r3, [r2, #20]
	ldr	r2, L108
	mov	r3, #0
	strb	r3, [r2, #18]
	ldr	r0, L108+24
	bl	printf
	ldr	r3, L108
	ldrh	r3, [r3, #4]
	ldr	r0, L108+28
	mov	r1, r3
	bl	printf
	ldr	r3, L108
	ldrh	r3, [r3, #6]
	ldr	r0, L108+32
	mov	r1, r3
	bl	printf
	ldr	r3, L108
	ldrh	r3, [r3, #8]
	ldr	r0, L108+36
	mov	r1, r3
	bl	printf
	ldr	r3, L108
	ldrh	r3, [r3, #10]
	ldr	r0, L108+40
	mov	r1, r3
	bl	printf
	ldr	r3, L108
	ldrb	r3, [r3, #12]	@ zero_extendqisi2
	ldr	r0, L108+44
	mov	r1, r3
	bl	printf
	ldr	r3, L108
	ldrsh	r3, [r3, #14]
	cmp	r3, #0
	beq	L106
	ldr	r3, L108+48
	str	r3, [fp, #-16]
	b	L107
L106:
	ldr	r3, L108+52
	str	r3, [fp, #-16]
L107:
	ldr	r0, L108+56
	ldr	r1, [fp, #-16]
	bl	printf
	ldr	r3, L108
	ldrb	r2, [r3, #17]	@ zero_extendqisi2
	ldr	r3, L108
	ldrb	r3, [r3, #16]	@ zero_extendqisi2
	ldr	r0, L108+60
	mov	r1, r2
	mov	r2, r3
	bl	printf
	ldr	r3, L108
	ldrb	r2, [r3, #19]	@ zero_extendqisi2
	ldr	r3, L108
	ldrb	r3, [r3, #18]	@ zero_extendqisi2
	ldr	r0, L108+64
	mov	r1, r2
	mov	r2, r3
	bl	printf
	ldr	r3, L108
	ldrb	r2, [r3, #21]	@ zero_extendqisi2
	ldr	r3, L108
	ldrb	r3, [r3, #20]	@ zero_extendqisi2
	ldr	r0, L108+68
	mov	r1, r2
	mov	r2, r3
	bl	printf
	ldr	r0, L108+72
	bl	printf
	ldmea	fp, {fp, sp, pc}
L109:
	.align	0
L108:
	.word	PVDevice
	.word	gx_displayprop
	.word	g_hWnd
	.word	LC13
	.word	LC1
	.word	327696
	.word	LC14
	.word	LC15
	.word	LC16
	.word	LC17
	.word	LC18
	.word	LC19
	.word	LC21
	.word	LC22
	.word	LC20
	.word	LC23
	.word	LC24
	.word	LC25
	.word	LC26
	.global	dith8
	.data
dith8:
	.byte	0
	.byte	4
	.byte	2
	.byte	6
	.byte	1
	.byte	5
	.byte	3
	.byte	7
	.global	dith4
dith4:
	.byte	0
	.byte	2
	.byte	1
	.byte	3
	.text
	.align	0
	.global	_Z10PVPutPixeltt7PVColorm
_Z10PVPutPixeltt7PVColorm:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #24
	str	r2, [fp, #-20]
	str	r3, [fp, #-24]
	strh	r0, [fp, #-14]	@ movhi 
	strh	r1, [fp, #-16]	@ movhi 
	ldr	r3, [fp, #-24]
	and	r3, r3, #32
	cmp	r3, #0
	beq	L111
	ldr	r3, L125
	ldr	r3, [r3, #0]
	ldr	r3, [r3, #4]
	str	r3, [fp, #-28]
	ldr	r3, L125
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-34]	@ movhi 
	strh	r3, [fp, #-32]	@ movhi 
	ldr	r3, L125
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [fp, #-36]	@ movhi 
	mov	r3, #1
	strh	r3, [fp, #-30]	@ movhi 
	b	L112
L111:
	ldr	r3, [fp, #-24]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L113
	ldr	r3, L125+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-28]
	b	L114
L113:
	ldr	r3, L125+8
	ldr	r3, [r3, #0]
	str	r3, [fp, #-28]
L114:
	ldr	r3, L125+4
	ldrh	r3, [r3, #10]	@ movhi
	strh	r3, [fp, #-34]	@ movhi 
	ldr	r3, L125+4
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [fp, #-36]	@ movhi 
	ldr	r3, L125+4
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [fp, #-30]	@ movhi 
	ldr	r3, L125+4
	ldrh	r3, [r3, #6]	@ movhi
	strh	r3, [fp, #-32]	@ movhi 
L112:
	ldrh	r2, [fp, #-14]
	ldrh	r3, [fp, #-34]
	cmp	r2, r3
	bcs	L110
	ldrh	r2, [fp, #-16]
	ldrh	r3, [fp, #-36]
	cmp	r2, r3
	bcs	L110
	ldr	r3, [fp, #-24]
	and	r3, r3, #1
	and	r3, r3, #255
	cmp	r3, #0
	beq	L116
	ldrb	r2, [fp, #-20]	@ zero_extendqisi2
	mov	r3, r2
	mov	r3, r3, asl #5
	rsb	r3, r2, r3
	mov	r2, r3, asl #3
	ldr	r3, L125+12
	smull	r1, r3, r2, r3
	add	r3, r3, r2
	mov	r1, r3, asr #7
	mov	r3, r2, asr #31
	rsb	r3, r3, r1
	strb	r3, [fp, #-20]
	ldrb	r2, [fp, #-18]	@ zero_extendqisi2
	mov	r3, r2
	mov	r3, r3, asl #5
	rsb	r3, r2, r3
	mov	r2, r3, asl #3
	ldr	r3, L125+12
	smull	r1, r3, r2, r3
	add	r3, r3, r2
	mov	r1, r3, asr #7
	mov	r3, r2, asr #31
	rsb	r3, r3, r1
	strb	r3, [fp, #-18]
	ldrb	r2, [fp, #-19]	@ zero_extendqisi2
	mov	r3, r2
	mov	r3, r3, asl #6
	rsb	r3, r2, r3
	mov	r2, r3, asl #2
	ldr	r3, L125+12
	smull	r1, r3, r2, r3
	add	r3, r3, r2
	mov	r1, r3, asr #7
	mov	r3, r2, asr #31
	rsb	r3, r3, r1
	strb	r3, [fp, #-19]
	ldrb	r3, [fp, #-20]
	and	r1, r3, #7
	ldr	r2, L125+16
	ldrh	r3, [fp, #-16]	@ movhi
	and	r3, r3, #3
	mov	r3, r3, asl #16
	mov	r0, r3, lsr #16
	ldrh	r3, [fp, #-14]	@ movhi
	and	r3, r3, #1
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r3, r3, asl #2
	add	r3, r3, r0
	add	r3, r3, r2
	ldrb	r2, [r3, #0]	@ zero_extendqisi2
	and	r3, r1, #255
	cmp	r2, r3
	bcs	L117
	ldrb	r3, [fp, #-20]
	add	r3, r3, #8
	strb	r3, [fp, #-20]
L117:
	ldrb	r3, [fp, #-18]
	and	r1, r3, #7
	ldr	r2, L125+16
	ldrh	r3, [fp, #-16]	@ movhi
	and	r3, r3, #3
	mov	r3, r3, asl #16
	mov	r0, r3, lsr #16
	ldrh	r3, [fp, #-14]	@ movhi
	and	r3, r3, #1
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r3, r3, asl #2
	add	r3, r3, r0
	add	r3, r3, r2
	ldrb	r2, [r3, #0]	@ zero_extendqisi2
	and	r3, r1, #255
	cmp	r2, r3
	bcs	L118
	ldrb	r3, [fp, #-18]
	add	r3, r3, #8
	strb	r3, [fp, #-18]
L118:
	ldrb	r3, [fp, #-19]
	and	r1, r3, #3
	ldr	r2, L125+20
	ldrh	r3, [fp, #-16]	@ movhi
	and	r3, r3, #1
	mov	r3, r3, asl #16
	mov	r0, r3, lsr #16
	ldrh	r3, [fp, #-14]	@ movhi
	and	r3, r3, #1
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r3, r3, asl #1
	add	r3, r3, r0
	add	r3, r3, r2
	ldrb	r2, [r3, #0]	@ zero_extendqisi2
	and	r3, r1, #255
	cmp	r2, r3
	bcs	L116
	ldrb	r3, [fp, #-19]
	add	r3, r3, #4
	strb	r3, [fp, #-19]
L116:
	ldr	r3, [fp, #-24]
	and	r3, r3, #3840
	cmp	r3, #256
	beq	L121
	b	L122
L121:
	ldrh	r2, [fp, #-30]
	ldrh	r3, [fp, #-14]
	mul	r1, r3, r2
	ldrh	r2, [fp, #-32]
	ldrh	r3, [fp, #-16]
	mul	r3, r2, r3
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-28]
	add	r1, r2, r3
	ldrh	r2, [fp, #-30]
	ldrh	r3, [fp, #-14]
	mul	r0, r3, r2
	ldrh	r2, [fp, #-32]
	ldrh	r3, [fp, #-16]
	mul	r3, r2, r3
	add	r3, r0, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-28]
	add	r0, r2, r3
	ldrb	r3, [fp, #-18]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r2, r3, #255
	ldr	r3, L125+4
	ldrb	r3, [r3, #18]	@ zero_extendqisi2
	mov	r2, r2, asl r3
	ldrb	r3, [fp, #-20]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	ip, r3, #255
	ldr	r3, L125+4
	ldrb	r3, [r3, #16]	@ zero_extendqisi2
	mov	r3, ip, asl r3
	orr	r2, r2, r3
	ldrb	r3, [fp, #-19]	@ zero_extendqisi2
	mov	r3, r3, lsr #2
	and	ip, r3, #255
	ldr	r3, L125+4
	ldrb	r3, [r3, #20]	@ zero_extendqisi2
	mov	r3, ip, asl r3
	orr	r3, r2, r3
	ldrh	r2, [r0, #0]	@ movhi
	eor	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	b	L120
L122:
	ldrh	r2, [fp, #-30]
	ldrh	r3, [fp, #-14]
	mul	r1, r3, r2
	ldrh	r2, [fp, #-32]
	ldrh	r3, [fp, #-16]
	mul	r3, r2, r3
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-28]
	add	r1, r2, r3
	ldrb	r3, [fp, #-18]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r2, r3, #255
	ldr	r3, L125+4
	ldrb	r3, [r3, #18]	@ zero_extendqisi2
	mov	r2, r2, asl r3
	ldrb	r3, [fp, #-20]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r0, r3, #255
	ldr	r3, L125+4
	ldrb	r3, [r3, #16]	@ zero_extendqisi2
	mov	r3, r0, asl r3
	orr	r2, r2, r3
	ldrb	r3, [fp, #-19]	@ zero_extendqisi2
	mov	r3, r3, lsr #2
	and	r0, r3, #255
	ldr	r3, L125+4
	ldrb	r3, [r3, #20]	@ zero_extendqisi2
	mov	r3, r0, asl r3
	orr	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
L120:
	ldr	r3, L125+24
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	bne	L110
	ldr	r2, L125+24
	ldr	r3, [fp, #-24]
	and	r3, r3, #240
	cmp	r3, #0
	movne	r3, #0
	moveq	r3, #1
	strh	r3, [r2, #0]	@ movhi 
L110:
	ldmea	fp, {fp, sp, pc}
L126:
	.align	0
L125:
	.word	PVCurrentPixmap
	.word	PVDevice
	.word	PVScreen
	.word	-2139062143
	.word	dith8
	.word	dith4
	.word	PVIDirty
	.align	0
	.global	_Z6PVRecttttt7PVColorm
_Z6PVRecttttt7PVColorm:
	@ args = 8, pretend = 0, frame = 44
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #44
	strh	r0, [fp, #-14]	@ movhi 
	strh	r1, [fp, #-16]	@ movhi 
	strh	r2, [fp, #-18]	@ movhi 
	strh	r3, [fp, #-20]	@ movhi 
	ldr	r3, [fp, #8]
	and	r3, r3, #32
	cmp	r3, #0
	beq	L128
	ldr	r3, L154
	ldr	r3, [r3, #0]
	ldr	r3, [r3, #4]
	str	r3, [fp, #-32]
	ldr	r3, L154
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-40]	@ movhi 
	strh	r3, [fp, #-36]	@ movhi 
	ldr	r3, L154
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [fp, #-38]	@ movhi 
	mov	r3, #1
	strh	r3, [fp, #-34]	@ movhi 
	b	L129
L128:
	ldr	r3, [fp, #8]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L130
	ldr	r3, L154+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-32]
	b	L131
L130:
	ldr	r3, L154+8
	ldr	r3, [r3, #0]
	str	r3, [fp, #-32]
L131:
	ldr	r3, L154+4
	ldrh	r3, [r3, #10]	@ movhi
	strh	r3, [fp, #-40]	@ movhi 
	ldr	r3, L154+4
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [fp, #-38]	@ movhi 
	ldr	r3, L154+4
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [fp, #-34]	@ movhi 
	ldr	r3, L154+4
	ldrh	r3, [r3, #6]	@ movhi
	strh	r3, [fp, #-36]	@ movhi 
L129:
	ldrh	r2, [fp, #-14]
	ldrh	r3, [fp, #-18]
	cmp	r2, r3
	bls	L132
	ldrh	r3, [fp, #-14]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-18]	@ movhi
	strh	r3, [fp, #-14]	@ movhi 
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-18]	@ movhi 
L132:
	ldrh	r2, [fp, #-16]
	ldrh	r3, [fp, #-20]
	cmp	r2, r3
	bls	L133
	ldrh	r3, [fp, #-16]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-20]	@ movhi
	strh	r3, [fp, #-16]	@ movhi 
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-20]	@ movhi 
L133:
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-40]
	cmp	r2, r3
	bcc	L134
	ldrh	r3, [fp, #-40]	@ movhi
	sub	r3, r3, #1
	strh	r3, [fp, #-18]	@ movhi 
L134:
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-38]
	cmp	r2, r3
	bcc	L135
	ldrh	r3, [fp, #-38]	@ movhi
	sub	r3, r3, #1
	strh	r3, [fp, #-20]	@ movhi 
L135:
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-40]
	cmp	r2, r3
	bcs	L127
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-38]
	cmp	r2, r3
	bcs	L127
	ldrb	r3, [fp, #6]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r2, r3, #255
	ldr	r3, L154+4
	ldrb	r3, [r3, #18]	@ zero_extendqisi2
	mov	r2, r2, asl r3
	ldrb	r3, [fp, #4]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r1, r3, #255
	ldr	r3, L154+4
	ldrb	r3, [r3, #16]	@ zero_extendqisi2
	mov	r3, r1, asl r3
	orr	r2, r2, r3
	ldrb	r3, [fp, #5]	@ zero_extendqisi2
	mov	r3, r3, lsr #2
	and	r1, r3, #255
	ldr	r3, L154+4
	ldrb	r3, [r3, #20]	@ zero_extendqisi2
	mov	r3, r1, asl r3
	orr	r3, r2, r3
	strh	r3, [fp, #-24]	@ movhi 
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-14]
	rsb	r3, r3, r2
	add	r3, r3, #1
	str	r3, [fp, #-48]
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-16]
	rsb	r3, r3, r2
	add	r3, r3, #1
	str	r3, [fp, #-52]
	ldrh	r2, [fp, #-36]
	ldr	r3, [fp, #-48]
	rsb	r3, r3, r2
	str	r3, [fp, #-56]
	ldrh	r1, [fp, #-14]
	ldrh	r2, [fp, #-36]
	ldrh	r3, [fp, #-16]
	mul	r3, r2, r3
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-28]
	ldr	r3, [fp, #8]
	and	r3, r3, #3840
	cmp	r3, #256
	beq	L138
	b	L145
L138:
	mov	r0, r0	@ nop
L139:
	ldr	r3, [fp, #-52]
	sub	r3, r3, #1
	str	r3, [fp, #-52]
	cmn	r3, #1
	bne	L141
	b	L137
L141:
	ldr	r3, [fp, #-48]
	str	r3, [fp, #-44]
L142:
	ldr	r3, [fp, #-44]
	sub	r3, r3, #1
	str	r3, [fp, #-44]
	cmn	r3, #1
	bne	L144
	b	L143
L144:
	sub	r0, fp, #28
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	ip, r3
	ldrh	r1, [ip, #0]	@ movhi
	ldrh	r3, [fp, #-24]	@ movhi
	eor	r3, r1, r3
	strh	r3, [ip, #0]	@ movhi 
	add	r2, r2, #2
	str	r2, [r0, #0]
	b	L142
L143:
	ldr	r3, [fp, #-56]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-28]
	add	r3, r3, r2
	str	r3, [fp, #-28]
	b	L139
L145:
	mov	r0, r0	@ nop
L146:
	ldr	r3, [fp, #-52]
	sub	r3, r3, #1
	str	r3, [fp, #-52]
	cmn	r3, #1
	bne	L148
	b	L137
L148:
	ldr	r3, [fp, #-48]
	str	r3, [fp, #-44]
L149:
	ldr	r3, [fp, #-44]
	sub	r3, r3, #1
	str	r3, [fp, #-44]
	cmn	r3, #1
	bne	L151
	b	L150
L151:
	sub	r0, fp, #28
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldrh	r3, [fp, #-24]	@ movhi
	strh	r3, [r1, #0]	@ movhi 
	add	r2, r2, #2
	str	r2, [r0, #0]
	b	L149
L150:
	ldr	r3, [fp, #-56]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-28]
	add	r3, r3, r2
	str	r3, [fp, #-28]
	b	L146
L137:
	ldr	r3, L154+12
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	bne	L127
	ldr	r2, L154+12
	ldr	r3, [fp, #8]
	and	r3, r3, #240
	cmp	r3, #0
	movne	r3, #0
	moveq	r3, #1
	strh	r3, [r2, #0]	@ movhi 
L127:
	ldmea	fp, {fp, sp, pc}
L155:
	.align	0
L154:
	.word	PVCurrentPixmap
	.word	PVDevice
	.word	PVScreen
	.word	PVIDirty
	.align	0
	.global	_Z5PVcls7PVColorm
_Z5PVcls7PVColorm:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #16
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	ldr	r3, [fp, #-16]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-20]
	str	r3, [sp, #4]
	mov	r0, #0
	mov	r1, #0
	ldr	r2, L157
	ldr	r3, L157
	bl	_Z6PVRecttttt7PVColorm
	ldmea	fp, {fp, sp, pc}
L158:
	.align	0
L157:
	.word	65535
	.align	0
	.global	_Z5PVrgbhhh
_Z5PVrgbhhh:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	mov	ip, r3
	mov	r3, r1
	strb	r3, [fp, #-13]
	mov	r3, r2
	strb	r3, [fp, #-14]
	mov	r3, ip
	strb	r3, [fp, #-15]
	ldrb	r3, [fp, #-13]
	strb	r3, [r0, #0]
	ldrb	r3, [fp, #-14]
	strb	r3, [r0, #1]
	ldrb	r3, [fp, #-15]
	strb	r3, [r0, #2]
	mvn	r3, #0
	strb	r3, [r0, #3]
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z8PVUpdatev
_Z8PVUpdatev:
	@ args = 0, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #12
	ldr	r3, L164
	ldr	r3, [r3, #0]
	str	r3, [fp, #-16]
	ldr	r3, L164+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-20]
	ldr	r3, L164
	ldrh	r2, [r3, #6]
	ldr	r3, L164
	ldrh	r3, [r3, #8]
	mul	r3, r2, r3
	str	r3, [fp, #-24]
L161:
	ldr	r3, [fp, #-24]
	sub	r3, r3, #1
	str	r3, [fp, #-24]
	cmn	r3, #1
	bne	L163
	b	L162
L163:
	sub	r1, fp, #16
	ldr	r0, [r1, #0]
	mov	r3, r0
	mov	ip, r3
	sub	lr, fp, #20
	ldr	r2, [lr, #0]
	mov	r3, r2
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [ip, #0]	@ movhi 
	add	r2, r2, #2
	str	r2, [lr, #0]
	add	r0, r0, #2
	str	r0, [r1, #0]
	b	L161
L162:
	ldr	r3, L164+8
	mov	r2, #0
	strh	r2, [r3, #0]	@ movhi 
	ldmea	fp, {fp, sp, pc}
L165:
	.align	0
L164:
	.word	PVDevice
	.word	PVScreen
	.word	PVIDirty
	.align	0
	.global	_Z12PVDontUpdatev
_Z12PVDontUpdatev:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r3, L167
	mov	r2, #0
	strh	r2, [r3, #0]	@ movhi 
	ldmea	fp, {fp, sp, pc}
L168:
	.align	0
L167:
	.word	PVIDirty
	.align	0
	.global	_Z17PVSetErrorMessagePc
_Z17PVSetErrorMessagePc:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	str	r0, [fp, #-16]
	ldr	r2, L170
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldmea	fp, {fp, sp, pc}
L171:
	.align	0
L170:
	.word	PVErrorMessage
	.align	0
	.global	_Z11PVAlphaLinetthtth7PVColorm
_Z11PVAlphaLinetthtth7PVColorm:
	@ args = 16, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #32
	mov	ip, r3
	ldr	lr, [fp, #4]
	ldr	r4, [fp, #8]
	strh	r0, [fp, #-18]	@ movhi 
	strh	r1, [fp, #-20]	@ movhi 
	mov	r3, r2
	strb	r3, [fp, #-21]
	strh	ip, [fp, #-24]	@ movhi 
	strh	lr, [fp, #-26]	@ movhi 
	mov	r3, r4
	strb	r3, [fp, #-27]
	ldr	r3, [fp, #16]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L173
	ldr	r3, L176
	ldr	r3, [r3, #0]
	str	r3, [fp, #-32]
	b	L174
L173:
	ldr	r3, L176+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-32]
L174:
	ldrh	r2, [fp, #-18]
	ldrh	r1, [fp, #-20]
	ldrb	ip, [fp, #-21]	@ zero_extendqisi2
	ldrh	lr, [fp, #-24]
	ldrh	r3, [fp, #-26]
	str	r3, [sp, #0]
	ldrb	r3, [fp, #-27]	@ zero_extendqisi2
	str	r3, [sp, #4]
	ldr	r3, [fp, #12]
	str	r3, [sp, #8]
	ldr	r3, [fp, #-32]
	str	r3, [sp, #12]
	mov	r0, r2
	mov	r2, ip
	mov	r3, lr
	bl	_Z10PVIUABLinetttttt7PVColorPt
	ldr	r3, L176+8
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	bne	L172
	ldr	r2, L176+8
	ldr	r3, [fp, #16]
	and	r3, r3, #240
	cmp	r3, #0
	movne	r3, #0
	moveq	r3, #1
	strh	r3, [r2, #0]	@ movhi 
L172:
	ldmea	fp, {r4, fp, sp, pc}
L177:
	.align	0
L176:
	.word	PVDevice
	.word	PVScreen
	.word	PVIDirty
	.align	0
	.global	_Z6PVLinetttt7PVColorm
_Z6PVLinetttt7PVColorm:
	@ args = 8, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #20
	strh	r0, [fp, #-14]	@ movhi 
	strh	r1, [fp, #-16]	@ movhi 
	strh	r2, [fp, #-18]	@ movhi 
	strh	r3, [fp, #-20]	@ movhi 
	ldr	r3, [fp, #8]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L179
	ldr	r3, L182
	ldr	r3, [r3, #0]
	str	r3, [fp, #-24]
	b	L180
L179:
	ldr	r3, L182+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-24]
L180:
	ldrh	r2, [fp, #-14]
	ldrh	r1, [fp, #-16]
	ldrh	ip, [fp, #-18]
	ldrh	lr, [fp, #-20]
	ldr	r3, [fp, #4]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-24]
	str	r3, [sp, #4]
	mov	r0, r2
	mov	r2, ip
	mov	r3, lr
	bl	_Z8PVIULinetttt7PVColorPt
	ldr	r3, L182+8
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	bne	L178
	ldr	r2, L182+8
	ldr	r3, [fp, #8]
	and	r3, r3, #240
	cmp	r3, #0
	movne	r3, #0
	moveq	r3, #1
	strh	r3, [r2, #0]	@ movhi 
L178:
	ldmea	fp, {fp, sp, pc}
L183:
	.align	0
L182:
	.word	PVDevice
	.word	PVScreen
	.word	PVIDirty
	.align	0
	.global	_Z10PVSetGammad
_Z10PVSetGammad:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	sub	r3, fp, #16
	stmdb	r3, {r0-r1}
	ldr	r2, L185
	sub	r1, fp, #16
	ldmdb	r1, {r3-r4}
	stmia	r2, {r3-r4}
	bl	_Z17PVILoadAlphaPrimev
	ldmea	fp, {r4, fp, sp, pc}
L186:
	.align	0
L185:
	.word	PVIGamma
	.align	0
	.global	_Z10PVGetGammav
_Z10PVGetGammav:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r3, L188
	ldmia	r3, {r3-r4}
	mov	r1, r4
	mov	r0, r3
	ldmea	fp, {r4, fp, sp, pc}
L189:
	.align	0
L188:
	.word	PVIGamma
	.global	GXHandle
	.bss
	.align	0
GXHandle:
	.space	4
	.section .rdata
	.align	0
LC27:
	.ascii	"g\000x\000.\000d\000l\000l\000\000\000"
	.align	0
LC28:
	.ascii	"F\000a\000i\000l\000e\000d\000 \000t\000o\000 \000l"
	.ascii	"\000o\000a\000d\000 \000g\000x\000.\000d\000l\000l\000"
	.ascii	"\000\000"
	.align	0
LC29:
	.ascii	"Got handle for gx.dll\n\000"
	.align	0
LC30:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000O\000p\000e\000n\000D\000i\000"
	.ascii	"s\000p\000l\000a\000y\000\000\000"
	.align	0
LC31:
	.ascii	"Got proccess address for GXOpenDisplay\n\000"
	.align	0
LC32:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000C\000l\000o\000s\000e\000D\000"
	.ascii	"i\000s\000p\000l\000a\000y\000\000\000"
	.align	0
LC33:
	.ascii	"Got proccess address for GXCloseDisplay\n\000"
	.align	0
LC34:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000B\000e\000g\000i\000n\000D\000"
	.ascii	"r\000a\000w\000\000\000"
	.align	0
LC35:
	.ascii	"Got proccess address for GXBeginDraw\n\000"
	.align	0
LC36:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000E\000n\000d\000D\000r\000a\000"
	.ascii	"w\000\000\000"
	.align	0
LC37:
	.ascii	"Got proccess address for GXEndDraw\n\000"
	.align	0
LC38:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000O\000p\000e\000n\000I\000n\000"
	.ascii	"p\000u\000t\000\000\000"
	.align	0
LC39:
	.ascii	"Got proccess address for GXOpenInput\n\000"
	.align	0
LC40:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000C\000l\000o\000s\000e\000I\000"
	.ascii	"n\000p\000u\000t\000\000\000"
	.align	0
LC41:
	.ascii	"Got proccess address for GXCloseInput\n\000"
	.align	0
LC42:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000G\000e\000t\000D\000i\000s\000"
	.ascii	"p\000l\000a\000y\000P\000r\000o\000p\000e\000r\000t"
	.ascii	"\000i\000e\000s\000\000\000"
	.align	0
LC43:
	.ascii	"Got proccess address for GXDisplayProperties\n\000"
	.align	0
LC44:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000G\000e\0004\000D\000e\000f\000"
	.ascii	"a\000u\000l\000t\000K\000e\000y\000s\000\000\000"
	.align	0
LC45:
	.ascii	"Got proccess address for GXGetDefaultKeys\n\000"
	.align	0
LC46:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000S\000u\000s\000p\000e\000n\000"
	.ascii	"d\000\000\000"
	.align	0
LC47:
	.ascii	"Got proccess address for GXSuspend\n\000"
	.align	0
LC48:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000R\000e\000s\000u\000m\000e\000"
	.ascii	"\000\000"
	.align	0
LC49:
	.ascii	"Got proccess address for GXResume\n\000"
	.align	0
LC50:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000S\000e\000t\000V\000i\000e\000"
	.ascii	"w\000p\000o\000r\000t\000\000\000"
	.align	0
LC51:
	.ascii	"Got proccess address for GXSetViewport\n\000"
	.align	0
LC52:
	.ascii	"E\000r\000r\000o\000r\000 \000g\000e\000t\000t\000i"
	.ascii	"\000n\000g\000 \000p\000r\000o\000c\000e\000s\000s\000"
	.ascii	" \000a\000d\000d\000r\000e\000s\000s\000 \000f\000o"
	.ascii	"\000r\000 \000G\000X\000I\000s\000D\000i\000s\000p\000"
	.ascii	"l\000a\000y\000D\000R\000A\000M\000B\000u\000f\000f"
	.ascii	"\000e\000r\000\000\000"
	.align	0
LC53:
	.ascii	"Got proccess address for GXIsDisplayDRAMBuffer\n\000"
	.text
	.align	0
	.global	_Z7GXIInitv
_Z7GXIInitv:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	ldr	r0, L205
	bl	LoadLibraryW
	mov	r3, r0
	ldr	r2, L205+4
	str	r3, [r2, #0]
	ldr	r3, [r2, #0]
	cmp	r3, #0
	bne	L191
	ldr	r3, L205+8
	str	r3, [fp, #-20]
	b	L190
L191:
	ldr	r0, L205+12
	bl	atexit
	mov	r3, r0
	cmp	r3, #0
	beq	L192
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	bl	FreeLibrary
	ldr	r3, L205+16
	str	r3, [fp, #-20]
	b	L190
L192:
	ldr	r0, L205+20
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #8
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L193
	ldr	r3, L205+24
	str	r3, [fp, #-20]
	b	L190
L193:
	ldr	r2, L205+28
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+32
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #2
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L194
	ldr	r3, L205+36
	str	r3, [fp, #-20]
	b	L190
L194:
	ldr	r2, L205+40
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+44
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #1
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L195
	ldr	r3, L205+48
	str	r3, [fp, #-20]
	b	L190
L195:
	ldr	r2, L205+52
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+56
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #4
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L196
	ldr	r3, L205+60
	str	r3, [fp, #-20]
	b	L190
L196:
	ldr	r2, L205+64
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+68
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #9
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L197
	ldr	r3, L205+72
	str	r3, [fp, #-20]
	b	L190
L197:
	ldr	r2, L205+76
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+80
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #3
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L198
	ldr	r3, L205+84
	str	r3, [fp, #-20]
	b	L190
L198:
	ldr	r2, L205+88
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+92
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #6
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L199
	ldr	r3, L205+96
	str	r3, [fp, #-20]
	b	L190
L199:
	ldr	r2, L205+100
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+104
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #5
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L200
	ldr	r3, L205+108
	str	r3, [fp, #-20]
	b	L190
L200:
	ldr	r2, L205+112
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+116
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #12
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L201
	ldr	r3, L205+120
	str	r3, [fp, #-20]
	b	L190
L201:
	ldr	r2, L205+124
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+128
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #10
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L202
	ldr	r3, L205+132
	str	r3, [fp, #-20]
	b	L190
L202:
	ldr	r2, L205+136
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+140
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #11
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L203
	ldr	r3, L205+144
	str	r3, [fp, #-20]
	b	L190
L203:
	ldr	r2, L205+148
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+152
	bl	printf
	ldr	r3, L205+4
	ldr	r0, [r3, #0]
	mov	r1, #7
	bl	GetProcAddressW
	mov	r3, r0
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	L204
	ldr	r3, L205+156
	str	r3, [fp, #-20]
	b	L190
L204:
	ldr	r2, L205+160
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r0, L205+164
	bl	printf
	mov	r3, #0
	str	r3, [fp, #-20]
L190:
	ldr	r0, [fp, #-20]
	ldmea	fp, {fp, sp, pc}
L206:
	.align	0
L205:
	.word	LC27
	.word	GXHandle
	.word	LC28
	.word	_Z6FreeGXv
	.word	LC2
	.word	LC29
	.word	LC30
	.word	GXOpenDisplay
	.word	LC31
	.word	LC32
	.word	GXCloseDisplay
	.word	LC33
	.word	LC34
	.word	GXBeginDraw
	.word	LC35
	.word	LC36
	.word	GXEndDraw
	.word	LC37
	.word	LC38
	.word	GXOpenInput
	.word	LC39
	.word	LC40
	.word	GXCloseInput
	.word	LC41
	.word	LC42
	.word	GXGetDisplayProperties
	.word	LC43
	.word	LC44
	.word	GXGetDefaultKeys
	.word	LC45
	.word	LC46
	.word	GXSuspend
	.word	LC47
	.word	LC48
	.word	GXResume
	.word	LC49
	.word	LC50
	.word	GXSetViewport
	.word	LC51
	.word	LC52
	.word	GXIsDisplayDRAMBuffer
	.word	LC53
	.section .rdata
	.align	0
LC54:
	.ascii	"Freeing gx.dll\n\000"
	.text
	.align	0
	.global	_Z6FreeGXv
_Z6FreeGXv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r0, L208
	bl	printf
	ldr	r3, L208+4
	ldr	r0, [r3, #0]
	bl	FreeLibrary
	ldmea	fp, {fp, sp, pc}
L209:
	.align	0
L208:
	.word	LC54
	.word	GXHandle
	.global	PVScreen
	.bss
	.align	0
PVScreen:
	.space	4
	.global	PVIAlphaLookup
	.data
	.align	0
PVIAlphaLookup:
	.word	0
	.global	PVIAlphaPrime
	.align	0
PVIAlphaPrime:
	.word	0
	.global	PVIGraphLookup
	.bss
	.align	0
PVIGraphLookup:
	.space	4480
	.global	PVIGamma
	.data
	.align	0
PVIGamma:
	.word	0
	.word	1074003968
	.text
	.align	0
	.global	_Z8PVIFlushv
_Z8PVIFlushv:
	@ args = 0, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #12
	ldr	r3, L215
	ldr	r3, [r3, #0]
	str	r3, [fp, #-16]
	ldr	r3, L215+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-20]
	ldr	r3, L215
	ldrh	r2, [r3, #6]
	ldr	r3, L215
	ldrh	r3, [r3, #8]
	mul	r3, r2, r3
	str	r3, [fp, #-24]
	ldr	r3, L215+8
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	beq	L210
L212:
	ldr	r3, [fp, #-24]
	sub	r3, r3, #1
	str	r3, [fp, #-24]
	cmn	r3, #1
	bne	L214
	b	L213
L214:
	sub	r1, fp, #16
	ldr	r0, [r1, #0]
	mov	r3, r0
	mov	ip, r3
	sub	lr, fp, #20
	ldr	r2, [lr, #0]
	mov	r3, r2
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [ip, #0]	@ movhi 
	add	r2, r2, #2
	str	r2, [lr, #0]
	add	r0, r0, #2
	str	r0, [r1, #0]
	b	L212
L213:
	ldr	r3, L215+8
	mov	r2, #0
	strh	r2, [r3, #0]	@ movhi 
L210:
	ldmea	fp, {fp, sp, pc}
L216:
	.align	0
L215:
	.word	PVDevice
	.word	PVScreen
	.word	PVIDirty
	.align	0
	.global	_Z15PVIRemoveBufferv
_Z15PVIRemoveBufferv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r3, L218
	ldr	r0, [r3, #0]
	bl	free
	ldmea	fp, {fp, sp, pc}
L219:
	.align	0
L218:
	.word	PVScreen
	.align	0
	.global	_Z12PVIGetBufferv
_Z12PVIGetBufferv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r4, L221
	ldr	r3, L221+4
	ldrh	r2, [r3, #6]
	ldr	r3, L221+4
	ldrh	r3, [r3, #8]
	mul	r3, r2, r3
	mov	r0, r3
	mov	r1, #2
	bl	calloc
	mov	r3, r0
	str	r3, [r4, #0]
	ldr	r3, L221
	ldr	r3, [r3, #0]
	cmp	r3, #0
	movne	r3, #0
	moveq	r3, #1
	mov	r0, r3
	ldmea	fp, {r4, fp, sp, pc}
L222:
	.align	0
L221:
	.word	PVScreen
	.word	PVDevice
	.align	0
	.global	_Z17PVILoadAlphaPrimev
_Z17PVILoadAlphaPrimev:
	@ args = 0, pretend = 0, frame = 4124
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4096
	sub	sp, sp, #28
	mov	r3, #0
	str	r3, [fp, #-28]
L224:
	ldr	r2, [fp, #-28]
	ldr	r3, L237+32
	cmp	r2, r3
	bls	L227
	b	L225
L227:
	ldr	r2, L237+36
	ldr	r3, [fp, #-28]
	mov	r3, r3, asl #2
	add	r3, r3, r2
	sub	r0, fp, #24
	add	r1, r3, r0
	sub	r0, fp, #4096
	str	r1, [r0, #-44]
	ldr	r0, [fp, #-28]
	bl	__floatsidf
	sub	r2, fp, #4096
	sub	r2, r2, #48
	stmda	r2, {r0-r1}
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	bge	L228
	sub	r3, fp, #4096
	sub	r3, r3, #48
	ldmda	r3, {r0-r1}
	adr	r2, L237
	ldmia	r2, {r2-r3}
	bl	__adddf3
	mov	r4, r1
	mov	r3, r0
	sub	r0, fp, #4096
	sub	r0, r0, #48
	stmda	r0, {r3-r4}
L228:
	sub	r2, fp, #4096
	sub	r2, r2, #48
	ldmda	r2, {r0-r1}
	adr	r2, L237+8
	ldmia	r2, {r2-r3}
	bl	__divdf3
	mov	r6, r1
	mov	r5, r0
	ldr	r3, L237+40
	adr	r0, L237+16
	ldmia	r0, {r0-r1}
	ldmia	r3, {r2-r3}
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r6
	mov	r0, r5
	mov	r2, r3
	mov	r3, r4
	bl	pow
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L237+24
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	mov	r3, r3, asl #16
	sub	r0, fp, #4096
	sub	r0, r0, #44
	ldr	r0, [r0, #0]
	str	r3, [r0, #0]
	ldr	r3, [fp, #-28]
	add	r3, r3, #1
	str	r3, [fp, #-28]
	b	L224
L225:
	mov	r3, #0
	str	r3, [fp, #-28]
L229:
	ldr	r3, [fp, #-28]
	cmp	r3, #255
	bls	L232
	b	L223
L232:
	mov	r3, #0
	str	r3, [fp, #-32]
L233:
	ldr	r3, [fp, #-32]
	cmp	r3, #31
	bls	L236
	b	L231
L236:
	ldr	r2, [fp, #-28]
	ldr	r3, [fp, #-32]
	mul	r2, r3, r2
	mov	r3, r2
	mov	r3, r3, asl #10
	rsb	r3, r2, r3
	add	r2, r3, #3952
	ldr	r3, L237+44
	umull	r0, r1, r3, r2
	rsb	r3, r1, r2
	mov	r3, r3, lsr #1
	add	r3, r1, r3
	mov	r3, r3, lsr #12
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-32]
	rsb	r2, r3, #31
	ldr	r3, [fp, #-28]
	mul	r2, r3, r2
	mov	r3, r2
	mov	r3, r3, asl #10
	rsb	r3, r2, r3
	add	r2, r3, #3952
	ldr	r3, L237+44
	umull	r0, r1, r3, r2
	rsb	r3, r1, r2
	mov	r3, r3, lsr #1
	add	r3, r1, r3
	mov	r3, r3, lsr #12
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #6
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	mov	r2, #128
	mov	r1, r3, asl #2
	ldr	r3, L237+48
	ldr	r3, [r3, #0]
	add	r3, r1, r3
	add	r2, r3, r2
	ldr	r1, L237+36
	ldr	r3, [fp, #-36]
	mov	r3, r3, asl #2
	add	r3, r3, r1
	sub	r1, fp, #24
	add	r3, r3, r1
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #6
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	mov	r2, r3, asl #2
	ldr	r3, L237+48
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r1, L237+36
	ldr	r3, [fp, #-40]
	mov	r3, r3, asl #2
	add	r3, r3, r1
	sub	r0, fp, #24
	add	r3, r3, r0
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #6
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	rsb	r3, r3, #32512
	add	r3, r3, #255
	mov	r2, r3, asl #2
	ldr	r3, L237+48
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r1, L237+36
	ldr	r3, [fp, #-36]
	rsb	r3, r3, #1020
	add	r3, r3, #3
	mov	r3, r3, asl #2
	add	r3, r3, r1
	sub	r1, fp, #24
	add	r3, r3, r1
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #6
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	rsb	r3, r3, #32512
	add	r3, r3, #223
	mov	r2, r3, asl #2
	ldr	r3, L237+48
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r1, L237+36
	ldr	r3, [fp, #-40]
	rsb	r3, r3, #1020
	add	r3, r3, #3
	mov	r3, r3, asl #2
	add	r3, r3, r1
	sub	r0, fp, #24
	add	r3, r3, r0
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r3, [fp, #-32]
	add	r3, r3, #1
	str	r3, [fp, #-32]
	b	L233
L231:
	ldr	r3, [fp, #-28]
	add	r3, r3, #1
	str	r3, [fp, #-28]
	b	L229
L223:
	ldmea	fp, {r4, r5, r6, fp, sp, pc}
L238:
	.align	0
L237:
	.word	0
	.word	1106247680
	.word	0
	.word	1083176960
	.word	0
	.word	1072693248
	.word	0
	.word	1077870592
	.word	1023
	.word	-4112
	.word	PVIGamma
	.word	155933665
	.word	PVIAlphaPrime
	.align	0
	.global	_Z17PVILoadAlphaTablev
_Z17PVILoadAlphaTablev:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #40
	ldr	r3, L259
	ldr	r3, [r3, #0]
	str	r3, [fp, #-44]
	mov	r3, #0
	str	r3, [fp, #-28]
L240:
	ldr	r3, [fp, #-28]
	cmp	r3, #31
	ble	L243
	b	L239
L243:
	ldr	r3, [fp, #-28]
	mov	r3, r3, asl #1
	sub	r3, r3, #31
	str	r3, [fp, #-32]
	mov	r3, #32
	str	r3, [fp, #-16]
	mov	r3, #0
	strh	r3, [fp, #-46]	@ movhi 
L244:
	ldr	r3, [fp, #-16]
	sub	r3, r3, #1
	str	r3, [fp, #-16]
	cmn	r3, #1
	bne	L246
	b	L242
L246:
	ldr	r3, [fp, #-28]
	mov	r3, r3, asl #2
	sub	r3, r3, #63
	str	r3, [fp, #-36]
	mov	r3, #64
	str	r3, [fp, #-20]
	mov	r3, #0
	strh	r3, [fp, #-48]	@ movhi 
L247:
	ldr	r3, [fp, #-20]
	sub	r3, r3, #1
	str	r3, [fp, #-20]
	cmn	r3, #1
	bne	L249
	b	L248
L249:
	ldr	r3, [fp, #-28]
	mov	r3, r3, asl #1
	sub	r3, r3, #31
	str	r3, [fp, #-40]
	mov	r3, #32
	str	r3, [fp, #-24]
	mov	r3, #0
	strh	r3, [fp, #-50]	@ movhi 
L250:
	ldr	r3, [fp, #-24]
	sub	r3, r3, #1
	str	r3, [fp, #-24]
	cmn	r3, #1
	bne	L252
	b	L251
L252:
	sub	r1, fp, #44
	ldr	r0, [r1, #0]
	mov	r3, r0
	mov	ip, r3
	ldrh	r2, [fp, #-46]	@ movhi
	ldrh	r3, [fp, #-50]	@ movhi
	orr	r3, r2, r3
	mov	r2, r3	@ movhi
	ldrh	r3, [fp, #-48]	@ movhi
	orr	r3, r2, r3
	strh	r3, [ip, #0]	@ movhi 
	add	r0, r0, #2
	str	r0, [r1, #0]
	ldr	r3, [fp, #-40]
	cmp	r3, #0
	ble	L253
	ldrh	r3, [fp, #-50]	@ movhi
	add	r3, r3, #1
	strh	r3, [fp, #-50]	@ movhi 
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r3, r2, r3
	sub	r3, r3, #62
	str	r3, [fp, #-40]
	b	L250
L253:
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-40]
	b	L250
L251:
	ldr	r3, [fp, #-36]
	cmp	r3, #0
	ble	L255
	ldrh	r3, [fp, #-48]	@ movhi
	add	r3, r3, #32
	strh	r3, [fp, #-48]	@ movhi 
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-36]
	add	r3, r2, r3
	sub	r3, r3, #126
	str	r3, [fp, #-36]
	b	L247
L255:
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-36]
	add	r3, r3, r2
	str	r3, [fp, #-36]
	b	L247
L248:
	ldr	r3, [fp, #-32]
	cmp	r3, #0
	ble	L257
	ldrh	r3, [fp, #-46]	@ movhi
	add	r3, r3, #2048
	strh	r3, [fp, #-46]	@ movhi 
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	sub	r3, r3, #62
	str	r3, [fp, #-32]
	b	L244
L257:
	ldr	r3, [fp, #-28]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	b	L244
L242:
	ldr	r3, [fp, #-28]
	add	r3, r3, #1
	str	r3, [fp, #-28]
	b	L240
L239:
	ldmea	fp, {fp, sp, pc}
L260:
	.align	0
L259:
	.word	PVIAlphaLookup
	.align	0
	.global	_Z7PVIInitv
_Z7PVIInitv:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	ldr	r4, L273
	mov	r0, #4194304
	bl	malloc
	mov	r3, r0
	str	r3, [r4, #0]
	ldr	r3, [r4, #0]
	cmp	r3, #0
	bne	L262
	mov	r3, #0
	str	r3, [fp, #-24]
	b	L261
L262:
	ldr	r4, L273+4
	mov	r0, #131072
	bl	malloc
	mov	r3, r0
	str	r3, [r4, #0]
	ldr	r3, [r4, #0]
	cmp	r3, #0
	bne	L263
	mov	r3, #0
	str	r3, [fp, #-24]
	b	L261
L263:
	ldr	r4, L273+8
	ldr	r0, L273+12
	bl	malloc
	mov	r3, r0
	str	r3, [r4, #0]
	ldr	r3, [r4, #0]
	cmp	r3, #0
	bne	L264
	mov	r3, #0
	str	r3, [fp, #-24]
	b	L261
L264:
	bl	_Z17PVILoadAlphaTablev
	bl	_Z17PVILoadAlphaPrimev
	mov	r3, #0
	strh	r3, [fp, #-18]	@ movhi 
L265:
	ldrh	r2, [fp, #-18]
	ldr	r3, L273+16
	cmp	r2, r3
	bls	L268
	b	L266
L268:
	ldr	r2, L273+20
	ldrh	r3, [fp, #-18]
	mov	r1, #1280
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r1, r3, r1
	ldr	r0, L273+20
	ldrh	ip, [fp, #-18]
	ldrh	r2, [fp, #-18]
	mov	r3, r2
	mov	r3, r3, asl #4
	rsb	r3, r2, r3
	mov	r3, r3, asl #4
	str	r3, [r0, ip, asl #2]
	rsb	r3, r3, #0
	str	r3, [r1, #0]
	ldrh	r3, [fp, #-18]	@ movhi
	add	r3, r3, #1
	strh	r3, [fp, #-18]	@ movhi 
	b	L265
L266:
	mov	r3, #0
	strh	r3, [fp, #-18]	@ movhi 
L269:
	ldrh	r3, [fp, #-18]
	cmp	r3, #239
	bls	L272
	b	L270
L272:
	ldr	r2, L273+20
	ldrh	r3, [fp, #-18]
	mov	r1, #3520
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r1, r3, r1
	ldr	r2, L273+20
	ldrh	r3, [fp, #-18]
	mov	r0, #2560
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldrh	r3, [fp, #-18]
	str	r3, [r2, #0]
	ldr	r3, [r2, #0]
	rsb	r3, r3, #0
	str	r3, [r1, #0]
	ldrh	r3, [fp, #-18]	@ movhi
	add	r3, r3, #1
	strh	r3, [fp, #-18]	@ movhi 
	b	L269
L270:
	mov	r3, #1
	str	r3, [fp, #-24]
L261:
	ldr	r0, [fp, #-24]
	ldmea	fp, {r4, fp, sp, pc}
L274:
	.align	0
L273:
	.word	PVIAlphaLookup
	.word	PVIAlphaPrime
	.word	PVTSortSpace
	.word	10000
	.word	319
	.word	PVIGraphLookup
	.align	0
	.global	_Z8PVIClosev
_Z8PVIClosev:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r3, L278
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L276
	ldr	r3, L278
	ldr	r0, [r3, #0]
	bl	free
L276:
	ldr	r3, L278+4
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L275
	ldr	r3, L278+4
	ldr	r0, [r3, #0]
	bl	free
L275:
	ldmea	fp, {fp, sp, pc}
L279:
	.align	0
L278:
	.word	PVIAlphaLookup
	.word	PVIAlphaPrime
	.section	.text$_Z10PVIUABLinetttttt7PVColorPt,"x"
	.linkonce discard
	.align	0
	.global	_Z10PVIUABLinetttttt7PVColorPt
_Z10PVIUABLinetttttt7PVColorPt:
	@ args = 16, pretend = 0, frame = 116
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #116
	ldr	ip, [fp, #4]
	ldr	lr, [fp, #8]
	strh	r0, [fp, #-14]	@ movhi 
	strh	r1, [fp, #-16]	@ movhi 
	strh	r2, [fp, #-18]	@ movhi 
	strh	r3, [fp, #-20]	@ movhi 
	strh	ip, [fp, #-22]	@ movhi 
	strh	lr, [fp, #-24]	@ movhi 
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-14]
	cmp	r2, r3
	bls	L281
	ldrh	r3, [fp, #-20]
	ldrh	r2, [fp, #-14]
	rsb	r3, r2, r3
	str	r3, [fp, #-52]
	b	L282
L281:
	ldrh	r3, [fp, #-14]
	ldrh	r2, [fp, #-20]
	rsb	r3, r2, r3
	str	r3, [fp, #-52]
L282:
	ldrh	r2, [fp, #-22]
	ldrh	r3, [fp, #-16]
	cmp	r2, r3
	bls	L283
	ldrh	r3, [fp, #-22]
	ldrh	r2, [fp, #-16]
	rsb	r3, r2, r3
	str	r3, [fp, #-56]
	b	L284
L283:
	ldrh	r3, [fp, #-16]
	ldrh	r2, [fp, #-22]
	rsb	r3, r2, r3
	str	r3, [fp, #-56]
L284:
	ldrb	r3, [fp, #14]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r3, r3, #255
	mov	r2, r3	@ movhi
	ldrb	r3, [fp, #13]	@ zero_extendqisi2
	mov	r3, r3, lsr #2
	and	r3, r3, #255
	mov	r3, r3, asl #5
	orr	r2, r2, r3
	ldrb	r3, [fp, #12]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r3, r3, #255
	mov	r3, r3, asl #11
	orr	r3, r2, r3
	strh	r3, [fp, #-46]	@ movhi 
	ldr	r3, [fp, #-52]
	cmp	r3, #0
	bne	L285
	ldr	r3, [fp, #-56]
	cmp	r3, #0
	bne	L285
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-24]
	add	r3, r2, r3
	mov	r3, r3, asr #4
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r1, [fp, #-14]
	ldr	r2, L317
	ldrh	r3, [fp, #-16]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	str	r3, [fp, #-32]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldrh	r3, [fp, #-26]
	mov	r3, r3, asl #16
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldrh	r3, [fp, #-26]	@ movhi
	eor	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r3, r3, asl #16
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	b	L280
L285:
	ldr	r2, [fp, #-52]
	ldr	r3, [fp, #-56]
	cmp	r2, r3
	ble	L287
	ldrh	r2, [fp, #-14]
	ldrh	r3, [fp, #-20]
	cmp	r2, r3
	bls	L288
	ldrh	r3, [fp, #-14]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-20]	@ movhi
	strh	r3, [fp, #-14]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-20]	@ movhi 
	ldrh	r3, [fp, #-16]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-16]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-18]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-24]	@ movhi
	strh	r3, [fp, #-18]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-24]	@ movhi 
L288:
	ldrh	r2, [fp, #-22]
	ldrh	r3, [fp, #-16]
	cmp	r2, r3
	bls	L289
	mov	r3, #240
	str	r3, [fp, #-80]
	ldr	r3, L317
	str	r3, [fp, #-108]
	b	L290
L289:
	mvn	r3, #239
	str	r3, [fp, #-80]
	ldr	r3, L317+8
	str	r3, [fp, #-108]
L290:
	ldr	r3, [fp, #-56]
	mov	r3, r3, asl #5
	str	r3, [fp, #-56]
	ldr	r0, [fp, #-56]
	ldr	r1, [fp, #-52]
	bl	__divsi3
	mov	r3, r0
	str	r3, [fp, #-72]
	ldr	r3, [fp, #-72]
	add	r3, r3, #1
	str	r3, [fp, #-76]
	ldr	r3, [fp, #-56]
	mov	r0, r3
	ldr	r1, [fp, #-52]
	bl	__modsi3
	mov	r3, r0
	str	r3, [fp, #-56]
	ldr	r3, [fp, #-56]
	mov	r3, r3, asl #1
	str	r3, [fp, #-68]
	ldr	r3, [fp, #-52]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-68]
	rsb	r3, r2, r3
	str	r3, [fp, #-64]
	ldr	r2, [fp, #-68]
	ldr	r3, [fp, #-52]
	rsb	r3, r3, r2
	str	r3, [fp, #-60]
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-18]
	cmp	r2, r3
	bls	L291
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-18]
	rsb	r3, r3, r2
	str	r3, [fp, #-84]
	ldr	r0, [fp, #-84]
	ldr	r1, [fp, #-52]
	bl	__divsi3
	mov	r3, r0
	mov	r3, r3, asl #6
	str	r3, [fp, #-100]
	ldr	r3, [fp, #-100]
	add	r3, r3, #64
	str	r3, [fp, #-104]
	b	L292
L291:
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-24]
	rsb	r3, r3, r2
	str	r3, [fp, #-84]
	ldr	r0, [fp, #-84]
	ldr	r1, [fp, #-52]
	bl	__divsi3
	mov	r3, r0
	mov	r3, r3, asl #6
	rsb	r3, r3, #0
	str	r3, [fp, #-100]
	ldr	r3, [fp, #-100]
	sub	r3, r3, #64
	str	r3, [fp, #-104]
L292:
	ldr	r3, [fp, #-84]
	mov	r0, r3
	ldr	r1, [fp, #-52]
	bl	__modsi3
	mov	r3, r0
	str	r3, [fp, #-84]
	ldr	r3, [fp, #-84]
	mov	r3, r3, asl #1
	str	r3, [fp, #-96]
	ldr	r3, [fp, #-52]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-96]
	rsb	r3, r2, r3
	str	r3, [fp, #-92]
	ldr	r2, [fp, #-96]
	ldr	r3, [fp, #-52]
	rsb	r3, r3, r2
	str	r3, [fp, #-88]
	mov	r3, #0
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-52]	@ movhi
	and	r3, r3, #1
	strh	r3, [fp, #-126]	@ movhi 
	ldr	r3, [fp, #-52]
	sub	r3, r3, #1
	mov	r3, r3, asr #1
	str	r3, [fp, #-52]
	ldrh	r1, [fp, #-14]
	ldr	r2, L317
	ldrh	r3, [fp, #-16]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	str	r3, [fp, #-40]
	ldrh	r1, [fp, #-20]
	ldr	r2, L317
	ldrh	r3, [fp, #-22]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	str	r3, [fp, #-44]
	ldr	r1, L317+12
	ldrh	r3, [fp, #-18]
	mov	r2, r3, asl #8
	ldr	r3, [r1, #0]
	add	r3, r3, r2
	str	r3, [fp, #-112]
	ldr	r1, L317+12
	ldrh	r3, [fp, #-24]
	mov	r2, r3, asl #8
	ldr	r3, [r1, #0]
	add	r3, r3, r2
	str	r3, [fp, #-116]
L293:
	sub	r1, fp, #40
	ldr	r0, [r1, #0]
	ldrh	r3, [fp, #-26]
	mov	r3, r3, lsr #5
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-108]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #1
	mov	r3, r0
	add	r3, r3, r2
	str	r3, [fp, #-32]
	add	r0, r0, #2
	str	r0, [r1, #0]
	sub	r1, fp, #44
	ldr	r0, [r1, #0]
	ldrh	r3, [fp, #-26]
	mov	r3, r3, lsr #5
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-108]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #1
	mov	r3, r0
	rsb	r3, r2, r3
	str	r3, [fp, #-36]
	sub	r0, r0, #2
	str	r0, [r1, #0]
	ldrh	r3, [fp, #-26]	@ movhi
	and	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-120]
	ldrh	r3, [fp, #-26]	@ movhi
	and	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-116]
	add	r3, r3, r2
	str	r3, [fp, #-124]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r1, [fp, #-36]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-36]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-80]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-80]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-36]
	rsb	r3, r2, r3
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-120]
	add	r3, r3, #128
	str	r3, [fp, #-120]
	ldr	r3, [fp, #-124]
	add	r3, r3, #128
	str	r3, [fp, #-124]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r1, [fp, #-36]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-36]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-60]
	cmp	r3, #0
	ble	L296
	ldrh	r2, [fp, #-26]	@ movhi
	ldrh	r3, [fp, #-76]	@ movhi
	add	r3, r2, r3
	strh	r3, [fp, #-26]	@ movhi 
	ldr	r2, [fp, #-60]
	ldr	r3, [fp, #-64]
	add	r3, r2, r3
	str	r3, [fp, #-60]
	b	L297
L296:
	ldrh	r2, [fp, #-26]	@ movhi
	ldrh	r3, [fp, #-72]	@ movhi
	add	r3, r2, r3
	strh	r3, [fp, #-26]	@ movhi 
	ldr	r2, [fp, #-60]
	ldr	r3, [fp, #-68]
	add	r3, r2, r3
	str	r3, [fp, #-60]
L297:
	ldr	r3, [fp, #-88]
	cmp	r3, #0
	ble	L298
	ldr	r3, [fp, #-104]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-112]
	ldr	r3, [fp, #-104]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-116]
	rsb	r3, r2, r3
	str	r3, [fp, #-116]
	ldr	r2, [fp, #-88]
	ldr	r3, [fp, #-92]
	add	r3, r2, r3
	str	r3, [fp, #-88]
	b	L295
L298:
	ldr	r3, [fp, #-100]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-112]
	ldr	r3, [fp, #-100]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-116]
	rsb	r3, r2, r3
	str	r3, [fp, #-116]
	ldr	r2, [fp, #-88]
	ldr	r3, [fp, #-96]
	add	r3, r2, r3
	str	r3, [fp, #-88]
L295:
	ldr	r3, [fp, #-52]
	sub	r3, r3, #1
	str	r3, [fp, #-52]
	cmn	r3, #1
	bne	L293
	ldrsh	r3, [fp, #-126]
	cmp	r3, #0
	bne	L280
	ldrh	r3, [fp, #-26]
	mov	r3, r3, lsr #5
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-108]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldrh	r3, [fp, #-26]	@ movhi
	and	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-120]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-80]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-120]
	add	r3, r3, #128
	str	r3, [fp, #-120]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	b	L280
L287:
	ldrh	r2, [fp, #-16]
	ldrh	r3, [fp, #-22]
	cmp	r2, r3
	bls	L303
	ldrh	r3, [fp, #-14]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-20]	@ movhi
	strh	r3, [fp, #-14]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-20]	@ movhi 
	ldrh	r3, [fp, #-16]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-16]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-18]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-24]	@ movhi
	strh	r3, [fp, #-18]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-24]	@ movhi 
L303:
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-14]
	cmp	r2, r3
	bls	L304
	mov	r3, #1
	str	r3, [fp, #-80]
	ldr	r3, L317+16
	str	r3, [fp, #-108]
	b	L305
L304:
	mvn	r3, #0
	str	r3, [fp, #-80]
	ldr	r3, L317+20
	str	r3, [fp, #-108]
L305:
	ldr	r3, [fp, #-52]
	mov	r3, r3, asl #5
	str	r3, [fp, #-52]
	ldr	r0, [fp, #-52]
	ldr	r1, [fp, #-56]
	bl	__divsi3
	mov	r3, r0
	str	r3, [fp, #-72]
	ldr	r3, [fp, #-72]
	add	r3, r3, #1
	str	r3, [fp, #-76]
	ldr	r3, [fp, #-52]
	mov	r0, r3
	ldr	r1, [fp, #-56]
	bl	__modsi3
	mov	r3, r0
	str	r3, [fp, #-52]
	ldr	r3, [fp, #-52]
	mov	r3, r3, asl #1
	str	r3, [fp, #-68]
	ldr	r3, [fp, #-56]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-68]
	rsb	r3, r2, r3
	str	r3, [fp, #-64]
	ldr	r2, [fp, #-68]
	ldr	r3, [fp, #-56]
	rsb	r3, r3, r2
	str	r3, [fp, #-60]
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-18]
	cmp	r2, r3
	bls	L306
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-18]
	rsb	r3, r3, r2
	str	r3, [fp, #-84]
	ldr	r0, [fp, #-84]
	ldr	r1, [fp, #-56]
	bl	__divsi3
	mov	r3, r0
	mov	r3, r3, asl #6
	str	r3, [fp, #-100]
	ldr	r3, [fp, #-100]
	add	r3, r3, #64
	str	r3, [fp, #-104]
	b	L307
L306:
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-24]
	rsb	r3, r3, r2
	str	r3, [fp, #-84]
	ldr	r0, [fp, #-84]
	ldr	r1, [fp, #-56]
	bl	__divsi3
	mov	r3, r0
	mov	r3, r3, asl #6
	rsb	r3, r3, #0
	str	r3, [fp, #-100]
	ldr	r3, [fp, #-100]
	sub	r3, r3, #64
	str	r3, [fp, #-104]
L307:
	ldr	r3, [fp, #-84]
	mov	r0, r3
	ldr	r1, [fp, #-56]
	bl	__modsi3
	mov	r3, r0
	str	r3, [fp, #-84]
	ldr	r3, [fp, #-84]
	mov	r3, r3, asl #1
	str	r3, [fp, #-96]
	ldr	r3, [fp, #-56]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-96]
	rsb	r3, r2, r3
	str	r3, [fp, #-92]
	ldr	r2, [fp, #-96]
	ldr	r3, [fp, #-56]
	rsb	r3, r3, r2
	str	r3, [fp, #-88]
	mov	r3, #0
	strh	r3, [fp, #-26]	@ movhi 
	ldrh	r3, [fp, #-56]	@ movhi
	and	r3, r3, #1
	strh	r3, [fp, #-126]	@ movhi 
	ldr	r3, [fp, #-56]
	sub	r3, r3, #1
	mov	r3, r3, asr #1
	str	r3, [fp, #-56]
	ldrh	r1, [fp, #-14]
	ldr	r2, L317
	ldrh	r3, [fp, #-16]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	str	r3, [fp, #-40]
	ldrh	r1, [fp, #-20]
	ldr	r2, L317
	ldrh	r3, [fp, #-22]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	str	r3, [fp, #-44]
	ldr	r1, L317+12
	ldrh	r3, [fp, #-18]
	mov	r2, r3, asl #8
	ldr	r3, [r1, #0]
	add	r3, r3, r2
	str	r3, [fp, #-112]
	ldr	r1, L317+12
	ldrh	r3, [fp, #-24]
	mov	r2, r3, asl #8
	ldr	r3, [r1, #0]
	add	r3, r3, r2
	str	r3, [fp, #-116]
L308:
	ldrh	r3, [fp, #-26]
	mov	r3, r3, lsr #5
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-108]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldrh	r3, [fp, #-26]
	mov	r3, r3, lsr #5
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-108]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-44]
	rsb	r3, r2, r3
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-40]
	add	r3, r3, #480
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-44]
	sub	r3, r3, #480
	str	r3, [fp, #-44]
	ldrh	r3, [fp, #-26]	@ movhi
	and	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-120]
	ldrh	r3, [fp, #-26]	@ movhi
	and	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-116]
	add	r3, r3, r2
	str	r3, [fp, #-124]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r1, [fp, #-36]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-36]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-80]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-80]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-36]
	rsb	r3, r2, r3
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-120]
	add	r3, r3, #128
	str	r3, [fp, #-120]
	ldr	r3, [fp, #-124]
	add	r3, r3, #128
	str	r3, [fp, #-124]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r1, [fp, #-36]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-36]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-124]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-60]
	cmp	r3, #0
	ble	L311
	ldrh	r2, [fp, #-26]	@ movhi
	ldrh	r3, [fp, #-76]	@ movhi
	add	r3, r2, r3
	strh	r3, [fp, #-26]	@ movhi 
	ldr	r2, [fp, #-60]
	ldr	r3, [fp, #-64]
	add	r3, r2, r3
	str	r3, [fp, #-60]
	b	L312
L311:
	ldrh	r2, [fp, #-26]	@ movhi
	ldrh	r3, [fp, #-72]	@ movhi
	add	r3, r2, r3
	strh	r3, [fp, #-26]	@ movhi 
	ldr	r2, [fp, #-60]
	ldr	r3, [fp, #-68]
	add	r3, r2, r3
	str	r3, [fp, #-60]
L312:
	ldr	r3, [fp, #-88]
	cmp	r3, #0
	ble	L313
	ldr	r3, [fp, #-104]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-112]
	ldr	r3, [fp, #-104]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-116]
	rsb	r3, r2, r3
	str	r3, [fp, #-116]
	ldr	r2, [fp, #-88]
	ldr	r3, [fp, #-92]
	add	r3, r2, r3
	str	r3, [fp, #-88]
	b	L310
L313:
	ldr	r3, [fp, #-100]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-112]
	ldr	r3, [fp, #-100]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-116]
	rsb	r3, r2, r3
	str	r3, [fp, #-116]
	ldr	r2, [fp, #-88]
	ldr	r3, [fp, #-96]
	add	r3, r2, r3
	str	r3, [fp, #-88]
L310:
	ldr	r3, [fp, #-56]
	sub	r3, r3, #1
	str	r3, [fp, #-56]
	cmn	r3, #1
	bne	L308
	ldrsh	r3, [fp, #-126]
	cmp	r3, #0
	bne	L280
	ldrh	r3, [fp, #-26]
	mov	r3, r3, lsr #5
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-108]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldrh	r3, [fp, #-26]	@ movhi
	and	r3, r3, #31
	mov	r3, r3, asl #16
	mov	r3, r3, lsr #16
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-112]
	add	r3, r3, r2
	str	r3, [fp, #-120]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-80]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-120]
	add	r3, r3, #128
	str	r3, [fp, #-120]
	ldr	r1, [fp, #-32]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-32]
	ldrh	r0, [r3, #0]
	ldr	r3, [fp, #-120]
	ldr	r3, [r3, #0]
	eor	r3, r3, #2031616
	add	r3, r0, r3
	mov	r0, r3, asl #1
	ldr	r3, L317+4
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldrh	r2, [r2, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	add	r3, r2, r3
	strh	r3, [r1, #0]	@ movhi 
L280:
	ldmea	fp, {fp, sp, pc}
L318:
	.align	0
L317:
	.word	PVIGraphLookup
	.word	PVIAlphaLookup
	.word	PVIGraphLookup+1280
	.word	PVIAlphaPrime
	.word	PVIGraphLookup+2560
	.word	PVIGraphLookup+3520
	.section	.text$_Z8PVIULinetttt7PVColorPt,"x"
	.linkonce discard
	.align	0
	.global	_Z8PVIULinetttt7PVColorPt
_Z8PVIULinetttt7PVColorPt:
	@ args = 8, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #48
	strh	r0, [fp, #-18]	@ movhi 
	strh	r1, [fp, #-20]	@ movhi 
	strh	r2, [fp, #-22]	@ movhi 
	strh	r3, [fp, #-24]	@ movhi 
	ldrb	r3, [fp, #6]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r3, r3, #255
	mov	r2, r3	@ movhi
	ldrb	r3, [fp, #5]	@ zero_extendqisi2
	mov	r3, r3, lsr #2
	and	r3, r3, #255
	mov	r3, r3, asl #5
	orr	r2, r2, r3
	ldrb	r3, [fp, #4]	@ zero_extendqisi2
	mov	r3, r3, lsr #3
	and	r3, r3, #255
	mov	r3, r3, asl #11
	orr	r3, r2, r3
	strh	r3, [fp, #-58]	@ movhi 
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-22]
	cmp	r2, r3
	bls	L320
	ldrh	r3, [fp, #-18]
	ldrh	r2, [fp, #-22]
	rsb	r3, r2, r3
	str	r3, [fp, #-48]
	b	L321
L320:
	ldrh	r3, [fp, #-22]
	ldrh	r2, [fp, #-18]
	rsb	r3, r2, r3
	str	r3, [fp, #-48]
L321:
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-24]
	cmp	r2, r3
	bls	L322
	ldrh	r3, [fp, #-20]
	ldrh	r2, [fp, #-24]
	rsb	r3, r2, r3
	str	r3, [fp, #-44]
	b	L323
L322:
	ldrh	r3, [fp, #-24]
	ldrh	r2, [fp, #-20]
	rsb	r3, r2, r3
	str	r3, [fp, #-44]
L323:
	ldr	r3, [fp, #-48]
	cmp	r3, #0
	bne	L324
	ldr	r3, [fp, #-44]
	cmp	r3, #0
	bne	L324
	ldrh	r1, [fp, #-18]
	ldr	r2, L348
	ldrh	r3, [fp, #-20]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #8]
	add	r2, r2, r3
	ldrh	r3, [fp, #-58]	@ movhi
	strh	r3, [r2, #0]	@ movhi 
	b	L319
L324:
	ldr	r2, [fp, #-48]
	ldr	r3, [fp, #-44]
	cmp	r2, r3
	bls	L326
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-22]
	cmp	r2, r3
	bls	L327
	ldrh	r3, [fp, #-18]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-18]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-20]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-24]	@ movhi
	strh	r3, [fp, #-20]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-24]	@ movhi 
L327:
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-20]
	cmp	r2, r3
	bls	L328
	mov	r3, #240
	str	r3, [fp, #-32]
	b	L329
L328:
	mvn	r3, #239
	str	r3, [fp, #-32]
L329:
	ldr	r3, [fp, #-44]
	mov	r3, r3, asl #1
	str	r3, [fp, #-40]
	ldr	r2, [fp, #-40]
	ldr	r3, [fp, #-48]
	rsb	r3, r3, r2
	str	r3, [fp, #-28]
	ldr	r2, [fp, #-28]
	ldr	r3, [fp, #-48]
	rsb	r3, r3, r2
	str	r3, [fp, #-36]
	ldrh	r1, [fp, #-18]
	ldr	r2, L348
	ldrh	r3, [fp, #-20]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #8]
	add	r3, r2, r3
	str	r3, [fp, #-52]
	ldrh	r1, [fp, #-22]
	ldr	r2, L348
	ldrh	r3, [fp, #-24]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #8]
	add	r3, r2, r3
	str	r3, [fp, #-56]
	ldr	r3, [fp, #-48]
	sub	r3, r3, #1
	mov	r3, r3, lsr #1
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-48]	@ movhi
	and	r3, r3, #1
	strh	r3, [fp, #-62]	@ movhi 
L330:
	sub	r0, fp, #52
	ldr	ip, [r0, #0]
	mov	r3, ip
	mov	lr, r3
	sub	r4, fp, #56
	ldr	r2, [r4, #0]
	mov	r3, r2
	ldrh	r1, [fp, #-58]	@ movhi
	strh	r1, [r3, #0]	@ movhi 
	strh	r1, [lr, #0]	@ movhi 
	sub	r2, r2, #2
	str	r2, [r4, #0]
	add	ip, ip, #2
	str	ip, [r0, #0]
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	ble	L333
	ldr	r3, [fp, #-32]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-52]
	add	r3, r3, r2
	str	r3, [fp, #-52]
	ldr	r3, [fp, #-32]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-56]
	rsb	r3, r2, r3
	str	r3, [fp, #-56]
	ldr	r2, [fp, #-28]
	ldr	r3, [fp, #-36]
	add	r3, r2, r3
	str	r3, [fp, #-28]
	b	L332
L333:
	ldr	r3, [fp, #-28]
	ldr	r2, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-28]
L332:
	ldrh	r3, [fp, #-60]	@ movhi
	sub	r3, r3, #1
	strh	r3, [fp, #-60]	@ movhi 
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L348+4
	cmp	r2, r3
	bne	L330
	ldrsh	r3, [fp, #-62]
	cmp	r3, #0
	bne	L319
	ldr	r2, [fp, #-52]
	ldrh	r3, [fp, #-58]	@ movhi
	strh	r3, [r2, #0]	@ movhi 
	b	L319
L326:
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-24]
	cmp	r2, r3
	bls	L338
	ldrh	r3, [fp, #-18]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-18]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-20]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-24]	@ movhi
	strh	r3, [fp, #-20]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-24]	@ movhi 
L338:
	ldrh	r2, [fp, #-22]
	ldrh	r3, [fp, #-18]
	cmp	r2, r3
	bls	L339
	mov	r3, #1
	str	r3, [fp, #-32]
	b	L340
L339:
	mvn	r3, #0
	str	r3, [fp, #-32]
L340:
	ldr	r3, [fp, #-48]
	mov	r3, r3, asl #1
	str	r3, [fp, #-40]
	ldr	r2, [fp, #-40]
	ldr	r3, [fp, #-44]
	rsb	r3, r3, r2
	str	r3, [fp, #-28]
	ldr	r2, [fp, #-28]
	ldr	r3, [fp, #-44]
	rsb	r3, r3, r2
	str	r3, [fp, #-36]
	ldrh	r1, [fp, #-18]
	ldr	r2, L348
	ldrh	r3, [fp, #-20]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #8]
	add	r3, r2, r3
	sub	r3, r3, #480
	str	r3, [fp, #-52]
	ldrh	r1, [fp, #-22]
	ldr	r2, L348
	ldrh	r3, [fp, #-24]
	ldr	r3, [r2, r3, asl #2]
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #8]
	add	r3, r2, r3
	add	r3, r3, #480
	str	r3, [fp, #-56]
	ldr	r3, [fp, #-44]
	sub	r3, r3, #1
	mov	r3, r3, lsr #1
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-44]	@ movhi
	and	r3, r3, #1
	strh	r3, [fp, #-62]	@ movhi 
L341:
	ldr	r3, [fp, #-52]
	add	r3, r3, #480
	str	r3, [fp, #-52]
	mov	r1, r3
	ldr	r3, [fp, #-56]
	sub	r3, r3, #480
	str	r3, [fp, #-56]
	ldrh	r2, [fp, #-58]	@ movhi
	strh	r2, [r3, #0]	@ movhi 
	strh	r2, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	ble	L344
	ldr	r3, [fp, #-32]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-52]
	add	r3, r3, r2
	str	r3, [fp, #-52]
	ldr	r3, [fp, #-32]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-56]
	rsb	r3, r2, r3
	str	r3, [fp, #-56]
	ldr	r2, [fp, #-28]
	ldr	r3, [fp, #-36]
	add	r3, r2, r3
	str	r3, [fp, #-28]
	b	L343
L344:
	ldr	r3, [fp, #-28]
	ldr	r2, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-28]
L343:
	ldrh	r3, [fp, #-60]	@ movhi
	sub	r3, r3, #1
	strh	r3, [fp, #-60]	@ movhi 
	mov	r3, r3, asl #16
	mov	r2, r3, lsr #16
	ldr	r3, L348+4
	cmp	r2, r3
	bne	L341
	ldrsh	r3, [fp, #-62]
	cmp	r3, #0
	bne	L319
	mov	r2, #480
	ldr	r3, [fp, #-52]
	add	r2, r2, r3
	ldrh	r3, [fp, #-58]	@ movhi
	strh	r3, [r2, #0]	@ movhi 
L319:
	ldmea	fp, {r4, fp, sp, pc}
L349:
	.align	0
L348:
	.word	PVIGraphLookup
	.word	65535
	.text
	.align	0
	.global	_Z14PVCreatePixmaptt
_Z14PVCreatePixmaptt:
	@ args = 0, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #12
	mov	r3, r0
	mov	r2, r1
	strh	r3, [fp, #-14]	@ movhi 
	strh	r2, [fp, #-16]	@ movhi 
	ldrh	r2, [fp, #-16]
	ldrh	r3, [fp, #-14]
	mul	r3, r2, r3
	mov	r3, r3, asl #1
	add	r3, r3, #8
	mov	r0, r3
	bl	malloc
	mov	r3, r0
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-20]
	cmp	r3, #0
	bne	L351
	ldr	r3, [fp, #-20]
	str	r3, [fp, #-24]
	b	L350
L351:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-20]
	add	r3, r3, #8
	str	r3, [r2, #4]
	ldr	r2, [fp, #-20]
	ldrh	r3, [fp, #-14]	@ movhi
	strh	r3, [r2, #2]	@ movhi 
	ldr	r2, [fp, #-20]
	ldrh	r3, [fp, #-16]	@ movhi
	strh	r3, [r2, #0]	@ movhi 
	ldr	r3, [fp, #-20]
	str	r3, [fp, #-24]
L350:
	ldr	r0, [fp, #-24]
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z15PVDestroyPixmapP8PVPixmap
_Z15PVDestroyPixmapP8PVPixmap:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	str	r0, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	beq	L352
	ldr	r0, [fp, #-16]
	bl	free
L352:
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z14PVSelectPixmapP8PVPixmap
_Z14PVSelectPixmapP8PVPixmap:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	str	r0, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	beq	L354
	ldr	r2, L356
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
L354:
	ldmea	fp, {fp, sp, pc}
L357:
	.align	0
L356:
	.word	PVCurrentPixmap
	.align	0
	.global	_Z5PVPuttt8PVPixmapm
_Z5PVPuttt8PVPixmapm:
	@ args = 4, pretend = 0, frame = 60
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #60
	mov	ip, r1
	mvn	r1, #11
	sub	lr, fp, #16
	add	r1, lr, r1
	stmia	r1, {r2-r3}
	strh	r0, [fp, #-18]	@ movhi 
	strh	ip, [fp, #-20]	@ movhi 
	mvn	r3, #11
	sub	r2, fp, #16
	add	r3, r2, r3
	ldr	r3, [r3, #4]
	str	r3, [fp, #-48]
	mov	r3, #1
	strh	r3, [fp, #-50]	@ movhi 
	mvn	r3, #11
	sub	lr, fp, #16
	add	r3, lr, r3
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-52]	@ movhi 
	mvn	r3, #11
	sub	r2, fp, #16
	add	r3, r2, r3
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [fp, #-54]	@ movhi 
	mvn	r3, #11
	sub	lr, fp, #16
	add	r3, lr, r3
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-56]	@ movhi 
	ldr	r3, [fp, #4]
	and	r3, r3, #32
	cmp	r3, #0
	beq	L359
	ldr	r3, L385
	ldr	r3, [r3, #0]
	ldr	r3, [r3, #4]
	str	r3, [fp, #-36]
	ldr	r3, L385
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-44]	@ movhi 
	strh	r3, [fp, #-40]	@ movhi 
	ldr	r3, L385
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [fp, #-42]	@ movhi 
	mov	r3, #1
	strh	r3, [fp, #-38]	@ movhi 
	b	L360
L359:
	ldr	r3, [fp, #4]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L361
	ldr	r3, L385+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-36]
	b	L362
L361:
	ldr	r3, L385+8
	ldr	r3, [r3, #0]
	str	r3, [fp, #-36]
L362:
	ldr	r3, L385+4
	ldrh	r3, [r3, #10]	@ movhi
	strh	r3, [fp, #-44]	@ movhi 
	ldr	r3, L385+4
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [fp, #-42]	@ movhi 
	ldr	r3, L385+4
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [fp, #-38]	@ movhi 
	ldr	r3, L385+4
	ldrh	r3, [r3, #6]	@ movhi
	strh	r3, [fp, #-40]	@ movhi 
L360:
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-44]
	cmp	r2, r3
	bcs	L358
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-42]
	cmp	r2, r3
	bcs	L358
	ldrh	r2, [fp, #-18]
	ldrh	r3, [fp, #-56]
	add	r2, r2, r3
	ldrh	r3, [fp, #-44]
	cmp	r2, r3
	ble	L364
	ldrh	r3, [fp, #-44]
	ldrh	r2, [fp, #-18]
	rsb	r3, r2, r3
	str	r3, [fp, #-64]
	b	L365
L364:
	ldrh	r3, [fp, #-56]
	str	r3, [fp, #-64]
L365:
	ldrh	r2, [fp, #-20]
	ldrh	r3, [fp, #-54]
	add	r2, r2, r3
	ldrh	r3, [fp, #-42]
	cmp	r2, r3
	ble	L366
	ldrh	r3, [fp, #-42]
	ldrh	r2, [fp, #-20]
	rsb	r3, r2, r3
	str	r3, [fp, #-68]
	b	L367
L366:
	ldrh	r3, [fp, #-54]
	str	r3, [fp, #-68]
L367:
	ldrh	r2, [fp, #-56]
	ldr	r3, [fp, #-64]
	rsb	r3, r3, r2
	str	r3, [fp, #-76]
	ldrh	r2, [fp, #-44]
	ldr	r3, [fp, #-64]
	rsb	r3, r3, r2
	str	r3, [fp, #-72]
	ldrh	r1, [fp, #-18]
	ldrh	r2, [fp, #-40]
	ldrh	r3, [fp, #-20]
	mul	r3, r2, r3
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-36]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #4]
	and	r3, r3, #3840
	cmp	r3, #256
	beq	L369
	b	L376
L369:
	mov	r0, r0	@ nop
L370:
	ldr	r3, [fp, #-68]
	sub	r3, r3, #1
	str	r3, [fp, #-68]
	cmn	r3, #1
	bne	L372
	b	L368
L372:
	ldr	r3, [fp, #-64]
	str	r3, [fp, #-60]
L373:
	ldr	r3, [fp, #-60]
	sub	r3, r3, #1
	str	r3, [fp, #-60]
	cmn	r3, #1
	bne	L375
	b	L374
L375:
	sub	r0, fp, #32
	ldr	ip, [r0, #0]
	mov	r3, ip
	mov	lr, r3
	sub	r4, fp, #48
	ldr	r2, [r4, #0]
	mov	r3, r2
	ldrh	r1, [lr, #0]	@ movhi
	ldrh	r3, [r3, #0]	@ movhi
	eor	r3, r1, r3
	strh	r3, [lr, #0]	@ movhi 
	add	r2, r2, #2
	str	r2, [r4, #0]
	add	ip, ip, #2
	str	ip, [r0, #0]
	b	L373
L374:
	ldr	r3, [fp, #-72]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-76]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-48]
	add	r3, r3, r2
	str	r3, [fp, #-48]
	b	L370
L376:
	mov	r0, r0	@ nop
L377:
	ldr	r3, [fp, #-68]
	sub	r3, r3, #1
	str	r3, [fp, #-68]
	cmn	r3, #1
	bne	L379
	b	L368
L379:
	ldr	r3, [fp, #-64]
	str	r3, [fp, #-60]
L380:
	ldr	r3, [fp, #-60]
	sub	r3, r3, #1
	str	r3, [fp, #-60]
	cmn	r3, #1
	bne	L382
	b	L381
L382:
	sub	r1, fp, #32
	ldr	r0, [r1, #0]
	mov	r3, r0
	mov	ip, r3
	sub	lr, fp, #48
	ldr	r2, [lr, #0]
	mov	r3, r2
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [ip, #0]	@ movhi 
	add	r2, r2, #2
	str	r2, [lr, #0]
	add	r0, r0, #2
	str	r0, [r1, #0]
	b	L380
L381:
	ldr	r3, [fp, #-72]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-76]
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-48]
	add	r3, r3, r2
	str	r3, [fp, #-48]
	b	L377
L368:
	ldr	r3, L385+12
	ldrsh	r3, [r3, #0]
	cmp	r3, #0
	bne	L358
	ldr	r2, L385+12
	ldr	r3, [fp, #4]
	and	r3, r3, #240
	cmp	r3, #0
	movne	r3, #0
	moveq	r3, #1
	strh	r3, [r2, #0]	@ movhi 
L358:
	ldmea	fp, {r4, fp, sp, pc}
L386:
	.align	0
L385:
	.word	PVCurrentPixmap
	.word	PVDevice
	.word	PVScreen
	.word	PVIDirty
	.align	0
	.global	_Z9PVPutRecttttttttt8PVPixmapm
_Z9PVPutRecttttttttt8PVPixmapm:
	@ args = 28, pretend = 0, frame = 80
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #80
	ldr	ip, [fp, #4]
	ldr	lr, [fp, #8]
	ldr	r4, [fp, #12]
	ldr	r5, [fp, #16]
	strh	r0, [fp, #-22]	@ movhi 
	strh	r1, [fp, #-24]	@ movhi 
	strh	r2, [fp, #-26]	@ movhi 
	strh	r3, [fp, #-28]	@ movhi 
	strh	ip, [fp, #-30]	@ movhi 
	strh	lr, [fp, #-32]	@ movhi 
	strh	r4, [fp, #-34]	@ movhi 
	strh	r5, [fp, #-36]	@ movhi 
	ldr	r3, [fp, #28]
	and	r3, r3, #32
	cmp	r3, #0
	beq	L388
	ldr	r3, L409
	ldr	r3, [r3, #0]
	ldr	r3, [r3, #4]
	str	r3, [fp, #-40]
	ldr	r3, L409
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-42]	@ movhi 
	strh	r3, [fp, #-46]	@ movhi 
	ldr	r3, L409
	ldr	r3, [r3, #0]
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [fp, #-44]	@ movhi 
	b	L389
L388:
	ldr	r3, [fp, #28]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L390
	ldr	r3, L409+4
	ldr	r3, [r3, #0]
	str	r3, [fp, #-40]
	b	L391
L390:
	ldr	r3, L409+8
	ldr	r3, [r3, #0]
	str	r3, [fp, #-40]
L391:
	ldr	r3, L409+4
	ldrh	r3, [r3, #10]	@ movhi
	strh	r3, [fp, #-42]	@ movhi 
	ldr	r3, L409+4
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [fp, #-44]	@ movhi 
	ldr	r3, L409+4
	ldrh	r3, [r3, #6]	@ movhi
	strh	r3, [fp, #-46]	@ movhi 
L389:
	mov	r2, #16
	add	r3, fp, #4
	add	r3, r3, r2
	ldr	r3, [r3, #4]
	str	r3, [fp, #-52]
	mov	r2, #16
	add	r3, fp, #4
	add	r3, r3, r2
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [fp, #-56]	@ movhi 
	mov	r2, #16
	add	r3, fp, #4
	add	r3, r3, r2
	ldrh	r3, [r3, #2]	@ movhi
	strh	r3, [fp, #-54]	@ movhi 
	strh	r3, [fp, #-58]	@ movhi 
	ldrh	r2, [fp, #-30]
	ldrh	r3, [fp, #-34]
	cmp	r2, r3
	bls	L392
	ldrh	r3, [fp, #-30]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-34]	@ movhi
	strh	r3, [fp, #-30]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-34]	@ movhi 
L392:
	ldrh	r2, [fp, #-32]
	ldrh	r3, [fp, #-36]
	cmp	r2, r3
	bls	L393
	ldrh	r3, [fp, #-32]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-36]	@ movhi
	strh	r3, [fp, #-32]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-36]	@ movhi 
L393:
	ldrh	r2, [fp, #-22]
	ldrh	r3, [fp, #-26]
	cmp	r2, r3
	bls	L394
	ldrh	r3, [fp, #-22]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-26]	@ movhi
	strh	r3, [fp, #-22]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-26]	@ movhi 
L394:
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-28]
	cmp	r2, r3
	bls	L395
	ldrh	r3, [fp, #-24]	@ movhi
	strh	r3, [fp, #-60]	@ movhi 
	ldrh	r3, [fp, #-28]	@ movhi
	strh	r3, [fp, #-24]	@ movhi 
	ldrh	r3, [fp, #-60]	@ movhi
	strh	r3, [fp, #-28]	@ movhi 
L395:
	ldrh	r2, [fp, #-30]
	ldrh	r3, [fp, #-42]
	cmp	r2, r3
	bcs	L387
	ldrh	r2, [fp, #-32]
	ldrh	r3, [fp, #-44]
	cmp	r2, r3
	bcs	L387
	ldrh	r2, [fp, #-26]
	ldrh	r3, [fp, #-54]
	cmp	r2, r3
	bcs	L387
	ldrh	r2, [fp, #-28]
	ldrh	r3, [fp, #-56]
	cmp	r2, r3
	bcs	L387
	ldrh	r2, [fp, #-34]
	ldrh	r3, [fp, #-42]
	cmp	r2, r3
	bls	L397
	ldrh	r3, [fp, #-42]
	ldrh	r2, [fp, #-30]
	rsb	r3, r2, r3
	str	r3, [fp, #-80]
	b	L398
L397:
	ldrh	r2, [fp, #-34]
	ldrh	r3, [fp, #-30]
	rsb	r3, r3, r2
	add	r3, r3, #1
	str	r3, [fp, #-80]
L398:
	ldrh	r2, [fp, #-36]
	ldrh	r3, [fp, #-44]
	cmp	r2, r3
	bls	L399
	ldrh	r3, [fp, #-44]
	ldrh	r2, [fp, #-32]
	rsb	r3, r2, r3
	str	r3, [fp, #-84]
	b	L400
L399:
	ldrh	r2, [fp, #-36]
	ldrh	r3, [fp, #-32]
	rsb	r3, r3, r2
	add	r3, r3, #1
	str	r3, [fp, #-84]
L400:
	ldrh	r2, [fp, #-26]
	ldrh	r3, [fp, #-22]
	rsb	r3, r3, r2
	str	r3, [fp, #-88]
	ldrh	r2, [fp, #-34]
	ldrh	r3, [fp, #-30]
	rsb	r3, r3, r2
	add	r3, r3, #1
	str	r3, [fp, #-92]
	ldrh	r2, [fp, #-28]
	ldrh	r3, [fp, #-24]
	rsb	r3, r3, r2
	str	r3, [fp, #-96]
	ldrh	r2, [fp, #-36]
	ldrh	r3, [fp, #-32]
	rsb	r3, r3, r2
	add	r3, r3, #1
	str	r3, [fp, #-100]
	ldrh	r1, [fp, #-30]
	ldrh	r2, [fp, #-32]
	ldrh	r3, [fp, #-46]
	mul	r3, r2, r3
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r3, r3, r2
	str	r3, [fp, #-40]
	ldrh	r1, [fp, #-22]
	ldrh	r2, [fp, #-24]
	ldrh	r3, [fp, #-58]
	mul	r3, r2, r3
	add	r3, r1, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-52]
	add	r3, r3, r2
	str	r3, [fp, #-52]
	mov	r3, #0
	str	r3, [fp, #-68]
L401:
	ldr	r2, [fp, #-68]
	ldr	r3, [fp, #-84]
	cmp	r2, r3
	bcc	L404
	b	L387
L404:
	ldr	r2, [fp, #-68]
	ldr	r3, [fp, #-96]
	mul	r3, r2, r3
	mov	r0, r3
	ldr	r1, [fp, #-100]
	bl	__udivsi3
	mov	r3, r0
	str	r3, [fp, #-76]
	mov	r3, #0
	str	r3, [fp, #-64]
L405:
	ldr	r2, [fp, #-64]
	ldr	r3, [fp, #-80]
	cmp	r2, r3
	bcc	L408
	b	L403
L408:
	ldr	r2, [fp, #-64]
	ldr	r3, [fp, #-88]
	mul	r3, r2, r3
	mov	r0, r3
	ldr	r1, [fp, #-92]
	bl	__udivsi3
	mov	r3, r0
	str	r3, [fp, #-72]
	ldrh	r2, [fp, #-46]
	ldr	r3, [fp, #-68]
	mul	r2, r3, r2
	ldr	r3, [fp, #-64]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	ldrh	r2, [fp, #-58]
	ldr	r3, [fp, #-76]
	mul	r2, r3, r2
	ldr	r3, [fp, #-72]
	add	r3, r2, r3
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-52]
	add	r3, r2, r3
	ldrh	r3, [r3, #0]	@ movhi
	strh	r3, [r1, #0]	@ movhi 
	ldr	r3, [fp, #-64]
	add	r3, r3, #1
	str	r3, [fp, #-64]
	b	L405
L403:
	ldr	r3, [fp, #-68]
	add	r3, r3, #1
	str	r3, [fp, #-68]
	b	L401
L387:
	ldmea	fp, {r4, r5, fp, sp, pc}
L410:
	.align	0
L409:
	.word	PVCurrentPixmap
	.word	PVDevice
	.word	PVScreen
	.align	0
	.global	_Z15PVTLoadIdentityP9PVTMatrix
_Z15PVTLoadIdentityP9PVTMatrix:
	@ args = 0, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #12
	str	r0, [fp, #-16]
	mov	r3, #3
	strb	r3, [fp, #-18]
	ldr	r3, [fp, #-16]
	str	r3, [fp, #-24]
	sub	r0, fp, #24
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L418	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
L412:
	ldrb	r3, [fp, #-18]
	sub	r3, r3, #1
	strb	r3, [fp, #-18]
	and	r3, r3, #255
	cmp	r3, #255
	bne	L414
	b	L411
L414:
	mov	r3, #4
	strb	r3, [fp, #-17]
L415:
	ldrb	r3, [fp, #-17]
	sub	r3, r3, #1
	strb	r3, [fp, #-17]
	and	r3, r3, #255
	cmp	r3, #255
	bne	L417
	b	L416
L417:
	sub	r0, fp, #24
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L418+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	b	L415
L416:
	sub	r0, fp, #24
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L418	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	b	L412
L411:
	ldmea	fp, {fp, sp, pc}
L419:
	.align	0
L418:
	.word	1065353216
	.word	0
	.align	0
	.global	_Z10PVTProjectP9PVTMatrixffff
_Z10PVTProjectP9PVTMatrixffff:
	@ args = 4, pretend = 0, frame = 160
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #212
	str	r0, [fp, #-28]
	str	r1, [fp, #-32]	@ float
	str	r2, [fp, #-36]	@ float
	str	r3, [fp, #-40]	@ float
	sub	r3, fp, #104
	str	r3, [fp, #-108]
	ldr	r0, [fp, #-32]	@ float
	ldr	r1, L421	@ float
	bl	__divsf3
	mov	r3, r0
	mov	r0, r3
	bl	__extendsfdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	cos
	mov	r6, r1
	mov	r5, r0
	ldr	r0, [fp, #-32]	@ float
	ldr	r1, L421	@ float
	bl	__divsf3
	mov	r3, r0
	mov	r0, r3
	bl	__extendsfdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r6
	mov	r0, r5
	mov	r2, r3
	mov	r3, r4
	bl	__divdf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [fp, #-112]	@ float
	ldr	r0, [fp, #4]	@ float
	ldr	r1, [fp, #-40]	@ float
	bl	__addsf3
	mov	r4, r0
	ldr	r0, [fp, #-40]	@ float
	ldr	r1, [fp, #4]	@ float
	bl	__subsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__divsf3
	mov	r3, r0
	str	r3, [fp, #-116]	@ float
	ldr	r3, [fp, #-40]	@ float
	mov	r0, r3
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	ldr	r0, [fp, #-40]	@ float
	ldr	r1, [fp, #4]	@ float
	bl	__subsf3
	mov	r3, r0
	ldr	r0, [fp, #4]	@ float
	mov	r1, r3
	bl	__divsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__mulsf3
	mov	r3, r0
	str	r3, [fp, #-120]	@ float
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-112]	@ float
	ldr	r1, [fp, #-36]	@ float
	bl	__divsf3
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	add	r4, r4, #4
	str	r4, [r5, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-112]	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-116]	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-120]	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+8	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L421+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	lr, fp, #184
	sub	ip, fp, #104
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, [fp, #-28]
	str	r3, [sp, #48]
	mov	lr, sp
	sub	ip, fp, #168
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	sub	r3, fp, #184
	ldmia	r3, {r0, r1, r2, r3}
	bl	_Z13PVTMultMatrix9PVTMatrixPS_
	ldmea	fp, {r4, r5, r6, fp, sp, pc}
L422:
	.align	0
L421:
	.word	1073741824
	.word	0
	.word	-1082130432
	.align	0
	.global	_Z12PVTTranslateP9PVTMatrixfff
_Z12PVTTranslateP9PVTMatrixfff:
	@ args = 0, pretend = 0, frame = 148
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #200
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]	@ float
	str	r2, [fp, #-24]	@ float
	str	r3, [fp, #-28]	@ float
	sub	r3, fp, #92
	str	r3, [fp, #-96]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-20]	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-24]	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-28]	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #96
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L424	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	lr, fp, #160
	sub	ip, fp, #92
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, [fp, #-16]
	str	r3, [sp, #48]
	mov	lr, sp
	sub	ip, fp, #144
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	sub	r3, fp, #160
	ldmia	r3, {r0, r1, r2, r3}
	bl	_Z13PVTMultMatrix9PVTMatrixPS_
	ldmea	fp, {fp, sp, pc}
L425:
	.align	0
L424:
	.word	1065353216
	.word	0
	.align	0
	.global	_Z9PVTRotateP9PVTMatrixfff
_Z9PVTRotateP9PVTMatrixfff:
	@ args = 0, pretend = 0, frame = 148
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #200
	str	r0, [fp, #-28]
	str	r1, [fp, #-32]	@ float
	str	r2, [fp, #-36]	@ float
	str	r3, [fp, #-40]	@ float
	sub	r3, fp, #104
	str	r3, [fp, #-108]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-40]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	cos
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-40]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-40]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__negdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-40]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	cos
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	lr, fp, #172
	sub	ip, fp, #104
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, [fp, #-28]
	str	r3, [sp, #48]
	mov	lr, sp
	sub	ip, fp, #156
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	sub	r3, fp, #172
	ldmia	r3, {r0, r1, r2, r3}
	bl	_Z13PVTMultMatrix9PVTMatrixPS_
	sub	r3, fp, #104
	str	r3, [fp, #-108]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-36]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	cos
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-36]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-36]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__negdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-36]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	cos
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	lr, fp, #172
	sub	ip, fp, #104
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, [fp, #-28]
	str	r3, [sp, #48]
	mov	lr, sp
	sub	ip, fp, #156
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	sub	r3, fp, #172
	ldmia	r3, {r0, r1, r2, r3}
	bl	_Z13PVTMultMatrix9PVTMatrixPS_
	sub	r3, fp, #104
	str	r3, [fp, #-108]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-32]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	cos
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-32]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__negdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-32]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	sin
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r5, fp, #108
	ldr	r4, [r5, #0]
	mov	r3, r4
	mov	r6, r3
	ldr	r0, [fp, #-32]	@ float
	bl	__extendsfdf2
	mov	r3, r1
	mov	r2, r0
	add	r4, r4, #4
	str	r4, [r5, #0]
	mov	r1, r3
	mov	r0, r2
	bl	cos
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__truncdfsf2
	mov	r3, r0
	str	r3, [r6, #0]	@ float
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	r0, fp, #108
	ldr	r2, [r0, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, L427+4	@ float
	str	r3, [r1, #0]	@ float
	add	r2, r2, #4
	str	r2, [r0, #0]
	sub	lr, fp, #172
	sub	ip, fp, #104
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, [fp, #-28]
	str	r3, [sp, #48]
	mov	lr, sp
	sub	ip, fp, #156
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	sub	r3, fp, #172
	ldmia	r3, {r0, r1, r2, r3}
	bl	_Z13PVTMultMatrix9PVTMatrixPS_
	ldmea	fp, {r4, r5, r6, fp, sp, pc}
L428:
	.align	0
L427:
	.word	0
	.word	1065353216
	.align	0
	.global	_Z13PVTMultMatrix9PVTMatrixPS_
_Z13PVTMultMatrix9PVTMatrixPS_:
	@ args = 68, pretend = 16, frame = 68
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	sub	sp, sp, #16
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}
	sub	fp, ip, #20
	sub	sp, sp, #68
	add	ip, fp, #4
	stmia	ip, {r0, r1, r2, r3}
	mov	r3, #0
	strb	r3, [fp, #-21]
L430:
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	cmp	r3, #3
	bls	L433
	b	L431
L433:
	mov	r3, #0
	strb	r3, [fp, #-22]
L434:
	ldrb	r3, [fp, #-22]	@ zero_extendqisi2
	cmp	r3, #15
	bls	L437
	b	L432
L437:
	ldrb	r2, [fp, #-21]	@ zero_extendqisi2
	ldrb	r3, [fp, #-22]	@ zero_extendqisi2
	add	r3, r2, r3
	mvn	r2, #67
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldrb	r2, [fp, #-22]	@ zero_extendqisi2
	ldr	r1, [fp, #68]
	ldrb	ip, [fp, #-21]	@ zero_extendqisi2
	add	r3, fp, #4
	ldr	r0, [r3, r2, asl #2]	@ float
	ldr	r1, [r1, ip, asl #2]	@ float
	bl	__mulsf3
	mov	r5, r0
	ldrb	r3, [fp, #-22]	@ zero_extendqisi2
	mov	r1, #4
	mov	r2, r3, asl #2
	add	r3, fp, #4
	add	r3, r2, r3
	add	r2, r3, r1
	ldr	r1, [fp, #68]
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mov	r0, #16
	mov	r3, r3, asl #2
	add	r3, r3, r1
	add	r3, r3, r0
	ldr	r0, [r2, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	__addsf3
	mov	r5, r0
	ldrb	r3, [fp, #-22]	@ zero_extendqisi2
	mov	r1, #8
	mov	r2, r3, asl #2
	add	r3, fp, #4
	add	r3, r2, r3
	add	r2, r3, r1
	ldr	r1, [fp, #68]
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mov	r0, #32
	mov	r3, r3, asl #2
	add	r3, r3, r1
	add	r3, r3, r0
	ldr	r0, [r2, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	__addsf3
	mov	r5, r0
	ldrb	r3, [fp, #-22]	@ zero_extendqisi2
	mov	r1, #12
	mov	r2, r3, asl #2
	add	r3, fp, #4
	add	r3, r2, r3
	add	r2, r3, r1
	ldr	r1, [fp, #68]
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mov	r0, #48
	mov	r3, r3, asl #2
	add	r3, r3, r1
	add	r3, r3, r0
	ldr	r0, [r2, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [r4, #0]	@ float
	ldrb	r3, [fp, #-22]
	add	r3, r3, #4
	strb	r3, [fp, #-22]
	b	L434
L432:
	ldrb	r3, [fp, #-21]
	add	r3, r3, #1
	strb	r3, [fp, #-21]
	b	L430
L431:
	mov	r3, #16
	strb	r3, [fp, #-21]
L438:
	ldrb	r3, [fp, #-21]
	sub	r3, r3, #1
	strb	r3, [fp, #-21]
	and	r3, r3, #255
	cmp	r3, #255
	bne	L440
	b	L429
L440:
	ldr	r2, [fp, #68]
	ldrb	r1, [fp, #-21]	@ zero_extendqisi2
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mvn	r0, #67
	mov	r3, r3, asl #2
	sub	ip, fp, #20
	add	r3, r3, ip
	add	r3, r3, r0
	ldr	r3, [r3, #0]	@ float
	str	r3, [r2, r1, asl #2]	@ float
	b	L438
L429:
	ldmea	fp, {r4, r5, fp, sp, pc}
	.align	0
	.global	_Z12PVTMultPoint9PVTMatrixP8PVTPoint
_Z12PVTMultPoint9PVTMatrixP8PVTPoint:
	@ args = 68, pretend = 16, frame = 20
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	sub	sp, sp, #16
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}
	sub	fp, ip, #20
	sub	sp, sp, #20
	add	ip, fp, #4
	stmia	ip, {r0, r1, r2, r3}
	mov	r3, #4
	strb	r3, [fp, #-21]
L442:
	ldrb	r3, [fp, #-21]
	sub	r3, r3, #1
	strb	r3, [fp, #-21]
	and	r3, r3, #255
	cmp	r3, #255
	bne	L444
	b	L443
L444:
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mvn	r2, #19
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldrb	r2, [fp, #-21]	@ zero_extendqisi2
	ldr	r1, [fp, #68]
	add	r3, fp, #4
	ldr	r0, [r3, r2, asl #4]	@ float
	ldr	r1, [r1, #0]	@ float
	bl	__mulsf3
	mov	r5, r0
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mov	r1, #4
	mov	r2, r3, asl #4
	add	r3, fp, #4
	add	r3, r2, r3
	add	r3, r3, r1
	ldr	r2, [fp, #68]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #4]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	__addsf3
	mov	r5, r0
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mov	r1, #8
	mov	r2, r3, asl #4
	add	r3, fp, #4
	add	r3, r2, r3
	add	r3, r3, r1
	ldr	r2, [fp, #68]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #8]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	__addsf3
	mov	r5, r0
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mov	r1, #12
	mov	r2, r3, asl #4
	add	r3, fp, #4
	add	r3, r2, r3
	add	r3, r3, r1
	ldr	r2, [fp, #68]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #12]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [r4, #0]	@ float
	b	L442
L443:
	mov	r3, #4
	strb	r3, [fp, #-21]
L445:
	ldrb	r3, [fp, #-21]
	sub	r3, r3, #1
	strb	r3, [fp, #-21]
	and	r3, r3, #255
	cmp	r3, #255
	bne	L447
	b	L441
L447:
	ldr	r2, [fp, #68]
	ldrb	r1, [fp, #-21]	@ zero_extendqisi2
	ldrb	r3, [fp, #-21]	@ zero_extendqisi2
	mvn	r0, #19
	mov	r3, r3, asl #2
	sub	ip, fp, #20
	add	r3, r3, ip
	add	r3, r3, r0
	ldr	r3, [r3, #0]	@ float
	str	r3, [r2, r1, asl #2]	@ float
	b	L445
L441:
	ldmea	fp, {r4, r5, fp, sp, pc}
	.align	0
	.global	_Z6PVTxyzfff
_Z6PVTxyzfff:
	@ args = 0, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #12
	str	r1, [fp, #-16]	@ float
	str	r2, [fp, #-20]	@ float
	str	r3, [fp, #-24]	@ float
	ldr	r3, [fp, #-16]	@ float
	str	r3, [r0, #0]	@ float
	ldr	r3, [fp, #-20]	@ float
	str	r3, [r0, #4]	@ float
	ldr	r3, [fp, #-24]	@ float
	str	r3, [r0, #8]	@ float
	ldr	r3, L449	@ float
	str	r3, [r0, #12]	@ float
	ldmea	fp, {fp, sp, pc}
L450:
	.align	0
L449:
	.word	1065353216
	.align	0
	.global	_Z12PVTCreateObjmm
_Z12PVTCreateObjmm:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #16
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	ldr	r2, [fp, #-20]
	ldr	r3, L454
	cmp	r2, r3
	bls	L452
	mov	r3, #0
	str	r3, [fp, #-28]
	b	L451
L452:
	ldr	r3, [fp, #-16]
	mov	r1, r3, asl #4
	ldr	r2, [fp, #-20]
	mov	r3, r2
	mov	r3, r3, asl #1
	add	r3, r3, r2
	mov	r3, r3, asl #2
	add	r3, r1, r3
	add	r3, r3, #20
	mov	r0, r3
	mov	r1, #1
	bl	calloc
	mov	r3, r0
	str	r3, [fp, #-24]
	ldr	r3, [fp, #-24]
	cmp	r3, #0
	beq	L453
	ldr	r2, [fp, #-24]
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r2, [fp, #-24]
	ldr	r3, [fp, #-20]
	str	r3, [r2, #4]
	ldr	r2, [fp, #-24]
	ldr	r3, [fp, #-24]
	add	r3, r3, #20
	str	r3, [r2, #8]
	ldr	r1, [fp, #-24]
	ldr	r0, [fp, #-24]
	ldr	r3, [fp, #-16]
	mov	r2, r3, asl #4
	ldr	r3, [r0, #8]
	add	r3, r3, r2
	str	r3, [r1, #12]
	ldr	r1, [fp, #-24]
	ldr	r0, [fp, #-24]
	ldr	r3, [fp, #-20]
	mov	r2, r3, asl #3
	ldr	r3, [r0, #12]
	add	r3, r3, r2
	str	r3, [r1, #16]
L453:
	ldr	r3, [fp, #-24]
	str	r3, [fp, #-28]
L451:
	ldr	r0, [fp, #-28]
	ldmea	fp, {fp, sp, pc}
L455:
	.align	0
L454:
	.word	10000
	.align	0
	.global	_Z13PVTDestroyObjP6PVTObj
_Z13PVTDestroyObjP6PVTObj:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	str	r0, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	beq	L456
	ldr	r0, [fp, #-16]
	bl	free
L456:
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z10PVTDrawObj6PVTObj9PVTMatrixm
_Z10PVTDrawObj6PVTObj9PVTMatrixm:
	@ args = 88, pretend = 16, frame = 60
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	sub	sp, sp, #16
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #20
	sub	sp, sp, #76
	add	ip, fp, #4
	stmia	ip, {r0, r1, r2, r3}
	ldr	r3, [fp, #8]
	str	r3, [fp, #-20]
	ldr	r3, [fp, #88]
	and	r3, r3, #16
	cmp	r3, #0
	beq	L459
	ldr	r3, L466+8
	ldr	r3, [r3, #0]
	str	r3, [fp, #-36]
	b	L460
L459:
	ldr	r3, L466+12
	ldr	r3, [r3, #0]
	str	r3, [fp, #-36]
L460:
	mov	r0, r0	@ nop
L461:
	ldr	r3, [fp, #-20]
	sub	r3, r3, #1
	str	r3, [fp, #-20]
	cmn	r3, #1
	bne	L463
	b	L458
L463:
	ldr	r3, [fp, #-20]
	mov	r2, r3, asl #3
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #4
	ldr	r3, [fp, #12]
	add	r3, r3, r2
	str	r3, [fp, #-44]
	add	r3, fp, #24
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-48]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-52]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-56]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-60]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-20]
	mov	r1, #4
	mov	r2, r3, asl #3
	ldr	r3, [fp, #16]
	add	r3, r2, r3
	add	r3, r3, r1
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #4
	ldr	r3, [fp, #12]
	add	r3, r3, r2
	str	r3, [fp, #-44]
	add	r3, fp, #24
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-64]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-68]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-72]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-40]
	ldr	r2, [fp, #-44]
	ldr	r0, [r3, #0]	@ float
	ldr	r1, [r2, #0]	@ float
	bl	__mulsf3
	mov	r4, r0
	mov	r2, #4
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #4
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #8
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r4, r0
	mov	r2, #12
	ldr	r3, [fp, #-40]
	add	r1, r2, r3
	mov	r2, #12
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldr	r0, [r1, #0]	@ float
	ldr	r1, [r3, #0]	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	__addsf3
	mov	r3, r0
	str	r3, [fp, #-76]	@ float
	ldr	r3, [fp, #-40]
	add	r3, r3, #16
	str	r3, [fp, #-40]
	ldr	r0, [fp, #-48]	@ float
	ldr	r1, [fp, #-60]	@ float
	bl	__divsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+16	@ float
	bl	__addsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+20	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r3
	bl	__fixunssfsi
	mov	r3, r0
	strh	r3, [fp, #-22]	@ movhi 
	ldr	r0, [fp, #-52]	@ float
	ldr	r1, [fp, #-60]	@ float
	bl	__divsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+16	@ float
	bl	__addsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+24	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r3
	bl	__fixunssfsi
	mov	r3, r0
	strh	r3, [fp, #-26]	@ movhi 
	ldr	r0, [fp, #-64]	@ float
	ldr	r1, [fp, #-76]	@ float
	bl	__divsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+16	@ float
	bl	__addsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+20	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r3
	bl	__fixunssfsi
	mov	r3, r0
	strh	r3, [fp, #-24]	@ movhi 
	ldr	r0, [fp, #-68]	@ float
	ldr	r1, [fp, #-76]	@ float
	bl	__divsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+16	@ float
	bl	__addsf3
	mov	r3, r0
	mov	r0, r3
	ldr	r1, L466+24	@ float
	bl	__mulsf3
	mov	r3, r0
	mov	r0, r3
	bl	__fixunssfsi
	mov	r3, r0
	strh	r3, [fp, #-28]	@ movhi 
	ldr	r3, [fp, #88]
	and	r3, r3, #2
	cmp	r3, #0
	beq	L464
	ldrh	r1, [fp, #-22]
	ldrh	ip, [fp, #-26]
	ldrh	lr, [fp, #-24]
	ldrh	r4, [fp, #-28]
	ldr	r3, [fp, #-20]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #20]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-36]
	str	r3, [sp, #4]
	mov	r0, r1
	mov	r1, ip
	mov	r2, lr
	mov	r3, r4
	bl	_Z8PVIULinetttt7PVColorPt
	b	L461
L464:
	ldr	r0, [fp, #-56]	@ float
	ldr	r1, [fp, #-60]	@ float
	bl	__divsf3
	mov	r3, r0
	ldr	r0, L466+16	@ float
	mov	r1, r3
	bl	__subsf3
	mov	r3, r0
	mov	r0, r3
	bl	__extendsfdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L466
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	strh	r3, [fp, #-30]	@ movhi 
	ldr	r0, [fp, #-72]	@ float
	ldr	r1, [fp, #-76]	@ float
	bl	__divsf3
	mov	r3, r0
	ldr	r0, L466+16	@ float
	mov	r1, r3
	bl	__subsf3
	mov	r3, r0
	mov	r0, r3
	bl	__extendsfdf2
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	adr	r2, L466
	ldmia	r2, {r2-r3}
	bl	__muldf3
	mov	r4, r1
	mov	r3, r0
	mov	r1, r4
	mov	r0, r3
	bl	__fixunsdfsi
	mov	r3, r0
	strh	r3, [fp, #-32]	@ movhi 
	ldrh	r1, [fp, #-22]
	ldrh	ip, [fp, #-26]
	ldrh	lr, [fp, #-30]
	ldrh	r4, [fp, #-24]
	ldrh	r3, [fp, #-28]
	str	r3, [sp, #0]
	ldrh	r3, [fp, #-32]
	str	r3, [sp, #4]
	ldr	r3, [fp, #-20]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #20]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	str	r3, [sp, #8]
	ldr	r3, [fp, #-36]
	str	r3, [sp, #12]
	mov	r0, r1
	mov	r1, ip
	mov	r2, lr
	mov	r3, r4
	bl	_Z10PVIUABLinetttttt7PVColorPt
	b	L461
L458:
	ldmea	fp, {r4, fp, sp, pc}
L467:
	.align	0
L466:
	.word	0
	.word	1080025088
	.word	PVDevice
	.word	PVScreen
	.word	1065353216
	.word	1122893824
	.word	1126105088
